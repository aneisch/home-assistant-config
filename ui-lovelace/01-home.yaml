title: Home
icon: mdi:home-circle
cards:
  # - !include .cards/kitchen_timer.yaml
  - !include .cards/grill.yaml
  - !include .cards/water_flow.yaml
  - !include .cards/water_flow_s3.yaml
  - !include .cards/camera_detect.yaml
  - !include .cards/is_smallgroup.yaml

  - type: custom:vertical-stack-in-card
    cards:
      - !include .cards/thermostat.yaml
      - type: markdown
        content: 'Last Thermostat Status Update: {{ time_since(as_datetime(states("sensor.thermostat_last_communication"))) }} ago'

  - type: custom:vertical-stack-in-card
    cards:
      - type: entities
        show_header_toggle: false
        title: Security
        entities:
          - input_boolean.security_status
          - entity: automation.frigate_notification_person
          - entity: lock.front_door
            card_mod:
              style: |
                :host {
                  {% if states('lock.front_door') == 'unlocked' %}
                  --paper-item-icon-color: red
                  {% endif %}
                }
          - entity: lock.garage_exterior_door
            card_mod:
              style: |
                :host {
                  {% if states('lock.garage_exterior_door') == 'unlocked' %}
                  --paper-item-icon-color: red
                  {% endif %}
                }
          - entity: lock.back_door
            card_mod:
              style: |
                :host {
                  {% if states('lock.back_door') == 'unlocked' %}
                  --paper-item-icon-color: red
                  {% endif %}
                }
          - entity: cover.garage_door
            card_mod:
              style: |
                :host {
                  {% if states('cover.garage_door') == 'open' %}
                  --paper-item-icon-color: red
                  {% endif %}
                }
          - entity: binary_sensor.garage_exterior_door
            card_mod:
              style: |
                :host {
                  {% if states('binary_sensor.garage_exterior_door') == 'on' %}
                  --paper-item-icon-color: red
                  {% endif %}
                }
          - entity: binary_sensor.garage_interior_door
            card_mod:
              style: |
                :host {
                  {% if states('binary_sensor.garage_interior_door') == 'on' %}
                  --paper-item-icon-color: red
                  {% endif %}
                }
          - entity: binary_sensor.front_door
            card_mod:
              style: |
                :host {
                  {% if states('binary_sensor.front_door') == 'on' %}
                  --paper-item-icon-color: red
                  {% endif %}
                }
          - entity: binary_sensor.master_bedroom_exterior_door
            card_mod:
              style: |
                :host {
                  {% if states('binary_sensor.master_bedroom_exterior_door') == 'on' %}
                  --paper-item-icon-color: red
                  {% endif %}
                }
          - entity: binary_sensor.back_porch_door
            card_mod:
              style: |
                :host {
                  {% if states('binary_sensor.back_porch_door') == 'on' %}
                  --paper-item-icon-color: red
                  {% endif %}
                }

      - type: markdown
        content: |
          {% set door_sensors = ['front_door_last','back_porch_door_last','garage_door_last','garage_exterior_door_last','garage_interior_door_last','master_bedroom_exterior_door_last'] %}
          {% for door in door_sensors -%}
          {%- set seconds = (as_timestamp(now()) - as_timestamp(states('datetime.' + door))) | int -%}
          {%- set minutes = (seconds // 60) | int -%}
          {%- set hours = (minutes // 60) | int -%}
          {%- set days = (hours // 24) | int -%}
          {{ state_attr('datetime.' + door, 'friendly_name') | capitalize }}: {% if seconds < 60 %}<font color='red'>{% elif seconds < 300 %}<font color='orange'>{% endif %}**{{days}}d {{hours%24}}h {{minutes%60}}m**</font>
          {% endfor %}
          {% set door_sensors = ['garage_motion_last','kitchen_motion_last','living_room_motion_last','hallway_motion_last', '433_motion_master_bathroom_last'] %}
          {% for door in door_sensors -%}
          {%- set seconds = (as_timestamp(now()) - as_timestamp(states('input_datetime.' + door))) | int -%}
          {%- set minutes = (seconds // 60) | int -%}
          {%- set hours = (minutes // 60) | int -%}
          {%- set days = (hours // 24) | int -%}
          {{ state_attr('input_datetime.' + door, 'friendly_name') | capitalize }}: {% if seconds < 60 %}<font color='red'>{% elif seconds < 300 %}<font color='orange'>{% endif %}**{{days}}d {{hours%24}}h {{minutes%60}}m**</font>
          {% endfor %}

  - type: vertical-stack
    cards:
      - type: entities
        entities:
          - name: Frigate Notifications
            entity: automation.frigate_notification_person
          - name: Notifications Snooze
            entity: timer.frigate_notification_snooze
          # - name: Back Porch Light
          #   entity: switch.back_porch_camera_white_light
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-template-card
            primary: "15m"
            tap_action:
              action: call-service
              service: timer.start
              data:
                duration: "00:15:00"
              target:
                entity_id: timer.frigate_notification_snooze

          - type: custom:mushroom-template-card
            primary: "30m"
            tap_action:
              action: call-service
              service: timer.start
              data:
                duration: "00:30:00"
              target:
                entity_id: timer.frigate_notification_snooze

          - type: custom:mushroom-template-card
            primary: "1h"
            tap_action:
              action: call-service
              service: timer.start
              data:
                duration: "01:00:00"
              target:
                entity_id: timer.frigate_notification_snooze

          - type: custom:mushroom-template-card
            primary: "2h"
            tap_action:
              action: call-service
              service: timer.start
              data:
                duration: "02:00:00"
              target:
                entity_id: timer.frigate_notification_snooze

          - type: custom:mushroom-template-card
            primary: "3h"
            tap_action:
              action: call-service
              service: timer.start
              data:
                duration: "03:00:00"
              target:
                entity_id: timer.frigate_notification_snooze

      # - type: custom:frigate-card
      #   cameras_global:
      #     live_provider: go2rtc
      #     engine: frigate
      #   cameras:
      #     - camera_entity: camera.driveway
      #     - camera_entity: camera.back_porch
      #     - camera_entity: camera.front_door
      #   menu:
      #     style: overlay
      #     position: top
      #     alignment: left
      #     buttons:
      #       cameras:
      #         enabled: false
      #       timeline:
      #         enabled: false
      #       download:
      #         enabled: false
      #       media_player:
      #         enabled: false
      #       microphone:
      #         enabled: false

  - type: entities
    show_header_toggle: false
    title: Automation Control
    entities:
      - input_boolean.door_notify
      - input_boolean.ac_automation
      - input_boolean.ac_change_notification
      # - input_boolean.aquarium_automation
      - input_boolean.occusim
      - input_boolean.guest_mode
      - input_boolean.house_lamps_automation
      - input_boolean.panic_mode
      - automation.lower_and_raise_blinds
      - input_boolean.backyard_floodlight_automation

  - type: entities
    show_header_toggle: false
    title: Trackers
    entities:
      - person.andrew
      - person.bethany

  - type: custom:vertical-stack-in-card
    title: Mail & Package Tracking
    cards:
      - type: picture-glance
        camera_image: camera.mail_usps
        entities: []
      - type: markdown
        content: |
          {{ states.sensor.mail_deliveries_message.state }}
          {% set seconds = (as_timestamp(now()) - as_timestamp(states('input_datetime.usps_last'))) | int %}
          {% set minutes = (seconds // 60) | int %}
          {% set hours = (minutes // 60) | int %}
          {% set days = (hours // 24) | int %}

          Last USPS: {% if seconds > 172800 %}<font color='red'>{% elif seconds > 64800 %}<font color='orange'>{% elif seconds < 86400 %}<font color='green'>{% endif %}**{{days}}d {{hours%24}}h {{minutes%60}}m**</font> @ {{ states('input_datetime.usps_last')}}
      - type: entity-filter
        state_filter:
          - operator: ">"
            value: "0"
        entities:
          - entity: sensor.mail_usps_mail
            name: "Today's Mail"
          - entity: sensor.mail_packages_in_transit
            name: "Today's Package Delivery"
          - entity: sensor.mail_usps_delivering
            icon: "mdi:package-variant-closed"
            name: USPS
          - entity: sensor.mail_fedex_delivering
            icon: "mdi:package-variant-closed"
            name: FedEx
          - entity: sensor.mail_ups_delivering
            icon: "mdi:package-variant-closed"
            name: UPS
          - entity: sensor.mail_updated
            state_filter:
              - operator: "regex"
                value: 20
      # - type: markdown
      #   content: |
      #     {%- set seconds = (as_timestamp(now()) - as_timestamp(states('sensor.433_mailbox_last_opened'))) | int -%}
      #     {%- set minutes = (seconds // 60) | int -%}
      #     {%- set hours = (minutes // 60) | int -%}
      #     {%- set days = (hours // 24) | int -%}
      #     Mailbox Last Opened: **{{days}}d {{hours%24}}h {{minutes%60}}m**

  - !include .cards/spotify.yaml
  - !include .cards/alexa.yaml

  - type: entities
    entities:
      - entity: input_text.kitchen_frame_url
        name: 'Enter URL Here:'
        type: 'custom:text-input-row'
      - action_name: Launch URL
        icon: 'mdi:voice'
        name: ' '
        service: script.photo_frame_launch_url
        type: call-service
        service_data:
          entity_id: media_player.kitchen_photo_frame
      - action_name: Launch Mealie
        icon: 'mdi:voice'
        name: ' '
        service: script.photo_frame_launch_mealie
        type: call-service

  - type: custom:vertical-stack-in-card
    cards:
      - type: entities
        show_header_toggle: false
        title: Weather
        entities:
          - weather.kcll_daynight
          - sensor.433_weather_temperature
          - sensor.433_weather_humidity
          - sensor.precip_probability
          - sun.sun
          - sensor.moon
          # - sensor.rain_total
          # - sensor.rain_rate
          - sensor.neighbor_5in1_wind
          - sensor.neighbor_5in1_wind_5_minute_average
          - sensor.neighbor_5in1_rain_total
          - sensor.neighbor_5in1_rain_last_1_hour
          - sensor.neighbor_5in1_rain_last_24_hours
          # - sensor.neighbor_rain_total
          # - sensor.neighbor_rain_last_1_hour
          # - sensor.neighbor_rain_last_24_hours
          - sensor.netatmo_home_rain_sum_rain_last_hour_inches
          - sensor.netatmo_home_rain_sum_rain_today_inches
          - sensor.compost_external_temperature
          - sensor.compost_internal_temperature
          - sensor.deep_freeze_temperature
      - type: custom:weather-card
        entity: weather.kcll_daynight

  #- type: iframe
  #  aspect_ratio: 90%
  #  url: !secret windy_url

  - type: picture-glance
    camera_image: camera.weather_radar
    entities: []

  # - type: picture-glance
  #   camera_image: camera.outdoor
  #   entities: []
