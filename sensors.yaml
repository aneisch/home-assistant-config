# Now in UI
# - platform: systemmonitor
#   scan_interval:
#     seconds: 60
#   resources:
#     - type: disk_use_percent
#       arg: /home
#     - type: disk_use_percent
#       arg: /
#     - type: disk_use_percent
#       arg: /frigate_disk
#     - type: memory_use_percent
#     - type: network_in
#       arg: eno1
#     - type: network_out
#       arg: eno1
#     - type: last_boot
#     - type: processor_use
#     - type: load_1m
#     - type: load_5m
#     - type: load_15m

- platform: pfsense_gateways
  host: 10.0.1.1
  name: pfSense gateway
  # https://github.com/alexpmorris/pfsense-status-gateways-json
  key: !secret pfsense_json_key
  monitored_gateway_interfaces:
    - wan

- platform: history_stats
  name: ac_runtime_today_cool
  entity_id: sensor.thermostat_state
  state: "Cooling"
  type: time
  start: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
  end: "{{ now() }}"

- platform: history_stats
  name: ac_runtime_today_heat
  entity_id: sensor.thermostat_state
  state: "Heating"
  type: time
  start: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
  end: "{{ now() }}"

- platform: history_stats
  name: ac_runtime_yesterday_cool
  entity_id: sensor.thermostat_state
  state: "Cooling"
  type: time
  end: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
  duration:
    hours: 24

- platform: history_stats
  name: ac_runtime_yesterday_heat
  entity_id: sensor.thermostat_state
  state: "Heating"
  type: time
  end: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
  duration:
    hours: 24

- platform: statistics
  name: "Neighbor 5in1 Rain Last 5 Days"
  entity_id: sensor.neighbor_5in1_rain_total
  state_characteristic: sum_differences
  max_age:
    days: 5
  precision: 3

- platform: statistics
  name: "Neighbor 5in1 Rain Last 24 Hours"
  entity_id: sensor.neighbor_5in1_rain_total
  state_characteristic: sum_differences
  max_age:
    hours: 24
  precision: 3

- platform: statistics
  name: "Neighbor 5in1 Rain Last 1 Hour"
  entity_id: sensor.neighbor_5in1_rain_total
  state_characteristic: sum_differences
  max_age:
    hours: 1
  precision: 3

- platform: statistics
  name: "Neighbor 5in1 Wind 5 Minute Average"
  entity_id: sensor.neighbor_5in1_wind
  state_characteristic: mean
  max_age:
    minutes: 5

# - platform: statistics
#   name: "Neighbor Rain Last 24 Hours"
#   entity_id: sensor.neighbor_rain_total
#   state_characteristic: change
#   max_age:
#     hours: 24
#   precision: 3

# - platform: statistics
#   name: "Neighbor Rain Last 1 Hour"
#   entity_id: sensor.neighbor_rain_total
#   state_characteristic: change
#   max_age:
#     hours: 1
#   precision: 3

#############
# TEMPLATES #
#############

- platform: template
  sensors:
    kitchen_timer_countdown:
      value_template: ""
      icon_template: "mdi:timer"

    kitchen_all_timers:
      friendly_name: "All Kitchen Timers"
      value_template: "{{ state_attr('sensor.kitchen_next_timer','sorted_active') | from_json | length }}"
      attribute_templates:
        timers_ending: >
          {% set ns = namespace(timers=[]) %}
          {% for i in (state_attr('sensor.kitchen_next_timer','sorted_active') | from_json) -%}
          {% set last_update = as_timestamp(state_attr('sensor.kitchen_next_timer','last_updated')) -%}
          {% set remain = i[1]['remainingTime']/1000 -%}
          {% set end_epoch = remain + last_update -%}
          {% set end_time = end_epoch | timestamp_custom('%Y-%m-%dT%H:%M:%S', True) -%}
          {% set ns.timers = ns.timers + [end_time] %}
          {% endfor %}
          {{ ns.timers }}

    phase_a_balance:
      friendly_name: "Phase A Percent Of Total Load"
      unit_of_measurement: "%"
      value_template: "{{ (states('sensor.phase_a_power') | float / states('sensor.total_power') | float * 100) | int }}"

    phase_b_balance:
      friendly_name: "Phase B Percent Of Total Load"
      unit_of_measurement: "%"
      value_template: "{{ (states('sensor.phase_b_power') | float / states('sensor.total_power') | float * 100) | int }}"

    phase_difference:
      friendly_name: "Phase Difference"
      unit_of_measurement: "%"
      value_template: "{{ (((states('sensor.phase_a_power') | int - states('sensor.phase_b_power') | int) | abs / ((states('sensor.phase_a_power') | int + states('sensor.phase_b_power') | int) / 2) ) * 100) | round(0) }}"

    ac_runtime_today:
      friendly_name: "AC Runtime Today"
      unit_of_measurement: "h"
      value_template: "{{ (states('sensor.ac_runtime_today_cool') | float + states('sensor.ac_runtime_today_heat') | float) }}"
      attribute_templates:
        value: "{{ (60 * (states('sensor.ac_runtime_today_cool') | float + states('sensor.ac_runtime_today_heat') | float)) | int }}m"

    ac_runtime_yesterday:
      friendly_name: "AC Runtime Today"
      unit_of_measurement: "h"
      value_template: "{{ (states('sensor.ac_runtime_yesterday_cool') | float + states('sensor.ac_runtime_yesterday_heat') | float) }}"
      attribute_templates:
        value: "{{ (60 * (states('sensor.ac_runtime_yesterday_cool') | float + states('sensor.ac_runtime_yesterday_heat') | float)) | int }}m"

    netatmo_home_rain_sum_rain_today_inches:
      friendly_name: Rainfall Today
      unit_of_measurement: in
      value_template: "{{ '%.2f'%((states('sensor.netatmo_home_home_rain_sum_rain_24') | float) / 25.4) }}"
      icon_template: >
        {% set amount = (states('sensor.netatmo_home_rain_sum_rain_today_inches') | float) %}
        {% if amount >= 0.50 %}
          mdi:weather-pouring
        {% elif amount > 0.00 and amount < 0.50 %}
          mdi:weather-rainy
        {% else %}
          mdi:cloud-outline
        {% endif %}

    netatmo_home_rain_sum_rain_last_hour_inches:
      friendly_name: Rainfall Last 1 Hour
      unit_of_measurement: in
      value_template: "{{ '%.2f'%((states('sensor.netatmo_home_home_rain_sum_rain_1') | float) / 25.4) }}"
      icon_template: >
        {% set amount = (states('sensor.netatmo_home_rain_sum_rain_last_hour_inches') | float) %}
        {% if amount >= 0.50 %}
          mdi:weather-pouring
        {% elif amount > 0.00 and amount < 0.50 %}
          mdi:weather-rainy
        {% else %}
          mdi:cloud-outline
        {% endif %}

    mail_deliveries_message:
      friendly_name: "Deliveries Summary"
      value_template: >
        {# Deliveries Sentence #}
          {% macro deliveries_sentence() -%}
                {%- if states("sensor.mail_usps_mail")|int(0) == 0 -%}
                  No
                {%- else -%}
                  {{states("sensor.mail_usps_mail")|int(0)}}
                {%- endif -%}
              {{' '}} 
                {%- if states("sensor.mail_usps_mail")|int(0) <= 1 -%}
                  mail
                {%- else -%}
                  pieces of mail
                {%- endif -%}
              {{' '}}will be delivered.{{' '}} 
                {%- if states("sensor.mail_packages_in_transit")|int(0) == 0 -%}
                  No
                {%- else -%}
                  {{states("sensor.mail_packages_in_transit")|int(0)}}
                {%- endif -%}
              {{' '}} 
                {%- if states("sensor.mail_packages_in_transit")|int(0) == 1 -%}
                  package is
                {%- else -%}
                  packages are
                {%- endif -%}
              {{' '}}in transit.{{' '}}
          {%- endmacro %}
        {{deliveries_sentence()}}

    nws_temperature:
      friendly_name: "Temperature"
      unit_of_measurement: "Â°F"
      value_template: "{{ state_attr('weather.kcll_daynight', 'temperature') }}"

    nws_humidity:
      friendly_name: "Humidity"
      unit_of_measurement: "%"
      icon_template: mdi:water-percent
      value_template: "{{ state_attr('weather.kcll_daynight', 'humidity') }}"

    nws_pressure:
      friendly_name: "Pressure"
      unit_of_measurement: "mbar"
      value_template: "{{ state_attr('weather.kcll_daynight', 'pressure') }}"

    nws_wind_speed:
      friendly_name: "Wind Speed"
      unit_of_measurement: "mph"
      icon_template: mdi:weather-windy
      value_template: "{{ state_attr('weather.kcll_daynight', 'wind_speed') }}"

    nws_precip_probability:
      friendly_name: "Percent Chance of Rain"
      unit_of_measurement: "%"
      icon_template: mdi:water-percent
      value_template: >
        {% if state_attr('weather.kcll_daynight', 'forecast')[0]['daytime'] == True %}
          {{ state_attr('weather.kcll_daynight', 'forecast')[0]['precipitation_probability'] }}
        {% else %}
          {{ state_attr('weather.kcll_daynight', 'forecast')[1]['precipitation_probability'] }}
        {% endif %}

    # electricity_price:
    #   friendly_name: "Electricity Price per kWH"
    #   unit_of_measurement: "USD/kWh"
    #   icon_template: mdi:currency-usd
    #   value_template: >
    #     {% if now().month >= 5 and now().month <= 10 %}
    #     {{ 0.1187 + 0.0166 }}
    #     {% else %}
    #     {{ 0.1136 + 0.0166 }}
    #     {% endif %}
