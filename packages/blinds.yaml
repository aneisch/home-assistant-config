homeassistant:
  customize:
    guest_bedroom_blinds:
      assumed_state: true
    dining_room_blinds:
      assumed_state: true
    office_blinds:
      assumed_state: true

group:
  dining_room_blinds:
    name: Dining Room Blinds
    entities:
      - cover.dining_room_blind_left
      - cover.dining_room_blind_center
      - cover.dining_room_blind_right
  guest_bedroom_blinds:
    name: Guest Bedroom Blinds
    entities:
      - cover.guest_bedroom_blind_left
      - cover.guest_bedroom_blind_right
  office_blinds:
    name: Office Blinds
    entities:
      - cover.office_blind_left
      - cover.office_blind_right
  master_bedroom_blinds:
    name: Master Bedroom Blinds
    entities:
      - cover.master_bedroom_blind_left
      - cover.master_bedroom_blind_right

cover:
  - platform: template
    covers:
      guest_bedroom_blinds:
        friendly_name: "Guest Bedroom Blinds"
        open_cover:
          service: script.blinds_group
          data:
            modus: "open"
            group: guest_bedroom
        close_cover:
          service: script.blinds_group
          data:
            modus: "close"
            group: guest_bedroom
        stop_cover:
          service: script.blinds_group
          data:
            modus: "stop"
            group: guest_bedroom
        value_template: "{{is_state('sensor.guest_bedroom_blinds', 'open')}}"
        icon_template: >-
          {% if is_state('sensor.guest_bedroom_blinds', 'open') %}
            mdi:window-open
          {% else %}
            mdi:window-closed
          {% endif %}

  - platform: template
    covers:
      master_bedroom_blinds:
        friendly_name: "Master Bedroom Blinds"
        open_cover:
          # Calling with script.turn_on results in non-blocking vs. calling script directly
          service: script.turn_on
          target:
            entity_id: script.blinds_group
          data:
            variables:
              modus: "open"
              group: master_bedroom
        close_cover:
          service: script.turn_on
          target:
            entity_id: script.blinds_group
          data:
            variables:
              modus: "close"
              group: master_bedroom
        stop_cover:
          service: script.turn_on
          target:
            entity_id: script.blinds_group
          data:
            variables:
              modus: "stop"
              group: master_bedroom
        value_template: "{{is_state('sensor.master_bedroom_blinds', 'open')}}"
        icon_template: >-
          {% if is_state('sensor.master_bedroom_blinds', 'open') %}
            mdi:window-open
          {% else %}
            mdi:window-closed
          {% endif %}

  - platform: template
    covers:
      office_blinds:
        friendly_name: "Office Blinds"
        open_cover:
          service: script.blinds_group
          data:
            modus: "open"
            group: office
        close_cover:
          service: script.blinds_group
          data:
            modus: "close"
            group: office
        stop_cover:
          service: script.blinds_group
          data:
            modus: "stop"
            group: office
        value_template: "{{is_state('sensor.office_blinds', 'open')}}"
        icon_template: >-
          {% if is_state('sensor.office_blinds', 'open') %}
            mdi:window-open
          {% else %}
            mdi:window-closed
          {% endif %}

      dining_room_blinds:
        friendly_name: "Dining Room Blinds"
        open_cover:
          service: script.blinds_group
          data:
            modus: "open"
            group: dining_room
        close_cover:
          service: script.blinds_group
          data:
            modus: "close"
            group: dining_room
        stop_cover:
          service: script.blinds_group
          data:
            modus: "stop"
            group: dining_room
        value_template: "{{is_state('sensor.dining_room_blinds', 'open')}}"
        icon_template: >-
          {% if is_state('sensor.dining_room_blinds', 'open') %}
            mdi:window-open
          {% else %}
            mdi:window-closed
          {% endif %}

input_boolean:
  # This is for the Zwave remote only
  guest_bedroom_blinds_mode:

sensor:
  - platform: template
    sensors:
      guest_bedroom_blinds:
        value_template: >-
          {% if is_state('cover.guest_bedroom_blind_left', 'open') %}
            open
          {% elif is_state('cover.guest_bedroom_blind_right', 'open') %}
            open
          {% else %}
            closed
          {% endif %}

      master_bedroom_blinds:
        value_template: >-
          {% if is_state('cover.master_bedroom_blind_left', 'open') %}
            open
          {% elif is_state('cover.master_bedroom_blind_right', 'open') %}
            open
          {% else %}
            closed
          {% endif %}

      office_blinds:
        value_template: >-
          {% if is_state('cover.office_blind_left', 'open') %}
            open
          {% elif is_state('cover.office_blind_right', 'open') %}
            open
          {% else %}
            closed
          {% endif %}

      dining_room_blinds:
        value_template: >-
          {% if is_state('cover.dining_room_blind_left', 'open') %}
            open
          {% elif is_state('cover.dining_room_blind_center', 'open') %}
            open
          {% elif is_state('cover.dining_room_blind_right', 'open') %}
            open
          {% else %}
            closed
          {% endif %}

script:
  blinds_group:
    mode: parallel
    sequence:
      - service: "cover.{{modus}}_cover"
        target:
          entity_id: >
            {% if group == "guest_bedroom" %}
            {{ expand('group.guest_bedroom_blinds') | map(attribute='entity_id') | list}}
            {% elif group == "master_bedroom" %}
            {{ expand('group.master_bedroom_blinds') | map(attribute='entity_id') | list}}
            {% elif group == "dining_room" %}
            {{ expand('group.dining_room_blinds') | map(attribute='entity_id') | list}}
            {% elif group == "office" %}
            {{ expand('group.office_blinds') | map(attribute='entity_id') | list}}
            {% endif %}
      - delay: "00:01:30"
      - service: "cover.{{modus}}_cover"
        target:
          entity_id: >
            {% if group == "guest_bedroom" %}
            {{ expand('group.guest_bedroom_blinds') | map(attribute='entity_id') | list}}
            {% elif group == "master_bedroom" %}
            {{ expand('group.master_bedroom_blinds') | map(attribute='entity_id') | list}}
            {% elif group == "dining_room" %}
            {{ expand('group.dining_room_blinds') | map(attribute='entity_id') | list}}
            {% elif group == "office" %}
            {{ expand('group.office_blinds') | map(attribute='entity_id') | list}}
            {% endif %}
      - delay: "00:00:10"
      - service: homeassistant.update_entity
        target:
          entity_id: >
            {% if group == "guest_bedroom" %}
            {{ expand('group.guest_bedroom_blinds') | map(attribute='entity_id') | list}}
            {% elif group == "master_bedroom" %}
            {{ expand('group.master_bedroom_blinds') | map(attribute='entity_id') | list}}
            {% elif group == "dining_room" %}
            {{ expand('group.dining_room_blinds') | map(attribute='entity_id') | list}}
            {% elif group == "office" %}
            {{ expand('group.office_blinds') | map(attribute='entity_id') | list}}
            {% endif %}

automation:
  - alias: "Lower and Raise Blinds"
    id: "lower_raise_blinds"
    trigger:
      - platform: time
        at: "09:00:00"
        id: morning
      - platform: state
        entity_id: sun.sun
        to: below_horizon
        for: "00:30:00"
        id: sunset
      - platform: state
        entity_id: sun.sun
        to: below_horizon
        for: "00:45:00"
        id: late
    action:
      - choose:
          - conditions: "{{ trigger.id == 'sunset' }}"
            alias: Close Blinds at Sunset
            sequence:
              - service: cover.close_cover
                continue_on_error: true
                target:
                  entity_id:
                    #- cover.office_blinds # Christmas
                    - cover.guest_bedroom_blinds
          - conditions: "{{ trigger.id == 'late' }}"
            alias: Close Blinds Late
            sequence:
              - service: cover.close_cover
                continue_on_error: true
                target:
                  entity_id:
                    - cover.office_blinds
                    - cover.dining_room_blinds
          - conditions: "{{ trigger.id == 'morning' }}"
            alias: Open Blinds
            sequence:
              - service: cover.open_cover
                continue_on_error: true
                target:
                  entity_id:
                    - cover.office_blinds
                    - cover.dining_room_blinds
              # Only open blinds if guest mode is OFF
              - if: "{{ states('input_boolean.guest_mode') == 'off' }}"
                then:
                  - service: cover.open_cover
                    continue_on_error: true
                    target:
                      entity_id:
                        - cover.guest_bedroom_blinds
          # Prevent stuck "opening" or "closing"
          # - repeat:
          #   count: "13"
          #   sequence:
          #     - delay: 5
          #     - service: homeassistant.update_entity
          #       target:
          #         entity_id: >
          #           {{ expand(['group.guest_bedroom_blinds','group.dining_room_blinds', 'group.office_blinds']) | map(attribute='entity_id') | list}}

  - alias: "Manually Update Blind State"
    id: manually_update_blind_state
    mode: parallel
    trigger:
      - platform: state
        entity_id: 
          - cover.dining_room_blind_left
          - cover.dining_room_blind_center
          - cover.dining_room_blind_right
          - cover.guest_bedroom_blind_left
          - cover.guest_bedroom_blind_right
          - cover.office_blind_left
          - cover.office_blind_right
          - cover.master_bedroom_blind_left
          - cover.master_bedroom_blind_right
        to:
          - opening
          - closing
        for: "00:01:30"
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: "{{ trigger.entity_id }}"
      - delay: "00:00:30"
      - service: homeassistant.update_entity
        target:
          entity_id: "{{ trigger.entity_id }}"

  - alias: "Guest Bedroom Blinds with Remote"
    id: guest_bedroom_blinds_remote
    mode: single
    trigger:
      - platform: event
        id: "zwave"
        event_type: zwave_js_value_notification
        event_data:
          # Guest Bedroom
          node_id: 43
          # Hold Down
          value: "KeyHeldDown"
      - platform: event
        id: "zigbee"
        event_type: zha_event
        event_data:
          device_ieee: cc:86:ec:ff:fe:aa:bf:4d
          command: "up_open"
      - platform: event
        id: "zigbee"
        event_type: zha_event
        event_data:
          device_ieee: cc:86:ec:ff:fe:aa:bf:4d
          command: "down_close"
    action:
      - if: "{{ trigger.id == 'zwave' }}"
        then:
          - service: cover.stop_cover
            target:
              entity_id: cover.guest_bedroom_blinds
          - service: "cover.{% if is_state('input_boolean.guest_bedroom_blinds_mode', 'on') %}close{% else %}open{% endif %}_cover"
            target:
              entity_id: cover.guest_bedroom_blinds
          - service: input_boolean.toggle
            entity_id: input_boolean.guest_bedroom_blinds_mode
          - delay: "00:00:02"
      - if: "{{ trigger.id == 'zigbee' }}"
        then:
          - service: "cover.{% if trigger.event.data.command == 'down_close' %}close{% elif trigger.event.data.command == 'up_open' %}open{% endif %}_cover"
            target:
              entity_id: cover.guest_bedroom_blinds
