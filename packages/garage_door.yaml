automation:
  - alias: "Update cover last opened"
    id: "update_cover_last_opened"
    trigger:
      - platform: state
        entity_id: cover.garage_door
        from: "closed"
        to: "open"
    action:
      - action: input_datetime.set_datetime
        data:
          entity_id: "input_datetime.{{trigger.entity_id | regex_replace(find='cover.', replace='') }}_last"
          datetime: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
      - action: counter.increment
        entity_id: counter.garage_door_cycles

  - alias: "Garage Exterior Switch Scenes"
    id: "garage_exterior_scenes"
    trigger:
      - platform: event
        event_type: zwave_js_value_notification
        event_data:
          node_id: 39
          # Double tap up
          value_raw: 3
    action:
      - action: homeassistant.turn_on
        entity_id: switch.garage_lights

  - alias: "Garage Interior Swap Lights"
    id: "garage_interior_swap"
    trigger:
      - platform: event
        event_type: zwave_js_value_notification
        event_data:
          # Interior door switch
          node_id: 30
          # Double tap up
          value_raw: 3
    action:
      - action: homeassistant.turn_off
        entity_id: switch.garage_lights
      - action: homeassistant.turn_on
        entity_id: switch.garage_center_leds

  - alias: "Turn off Garage Lights"
    id: "garge_lights_off"
    trigger:
      - platform: state
        alias: "Garage No Person 5min"
        entity_id: binary_sensor.garage_person_occupancy
        from: "on"
        to: "off"
        for: "00:05:00"
      - platform: state
        alias: "Garage No Motion 5min"
        entity_id: binary_sensor.garage_motion
        from: "on"
        to: "off"
        for: "00:10:00"
      # Garage Switch Off Pressed
      - device_id: b9432c1a74b8179151d0fb0688baac05
        alias: "Garage Switch"
        domain: zwave_js
        type: event.value_notification.central_scene
        property: scene
        property_key: "001"
        endpoint: 0
        command_class: 91
        subtype: Endpoint 0 Scene 001
        trigger: device
        value: 0
    #condition: "{{ states('switch.garage_lights') == 'on' }}"
    action:
      action: homeassistant.turn_off
      entity_id: 
        - switch.garage_lights
        - switch.garage_center_leds

  - alias: "Change entry switch LEDs based on garage door state"
    id: "garage_opened_switch_leds"
    trigger:
      - platform: state
        entity_id: cover.garage_door
        from: "closed"
        to: "open"
    action:
      # Run command that for some reason doesn't always work
      - action: script.zen30_led_color_change
        data:
          color: "Red"
      - wait_for_trigger:
          - platform: state
            entity_id: cover.garage_door
            to: "closed"
      - action: script.zen30_led_color_change
        data:
          color: "Green"

  - alias: "Garage door still opened when no one home"
    id: "garage_open_noone_home"
    trigger:
      - platform: state
        id: alert
        entity_id: group.trackers
        to: not_home
      - platform: event
        id: respond
        event_type: mobile_app_notification_action
        event_data:
          action: confirm_close_garage
    condition:
      - condition: state
        entity_id: cover.garage_door
        state: "open"
    action:
      - if: "{{ trigger.id == 'alert' }}"
        then:
          - action: notify.mobile_app_andrew_phone
            data:
              message: "No one home, close garage door?"
              data:
                persistent: true # Set to true to create a persistent notification
                tag: persistent # Tag is required for the persistent notification
                actions:
                  - action: "confirm_close_garage"
                    title: "Confirm"
                  - action: "ignore_close_garage"
                    title: "Ignore"
      - if: "{{ trigger.id == 'respond' }}"
        then:
          - action: cover.close_cover
            entity_id: cover.garage_door

  - alias: "Garage changed to open when no one home"
    id: "garage_opened_noone_home"
    trigger:
      - platform: state
        entity_id: cover.garage_door
        to: "open"
    condition:
      condition: state
      entity_id: group.trackers
      state: "not_home"
    action:
      - action: script.notify_wrapper
        data:
          message: "Garage door opened and no one home"

counter:
  garage_door_cycles:
    icon: mdi:garage

script:
  zen30_led_color_change:
    sequence:
      # Entryway
      - action: zwave_js.set_config_parameter
        target:
          entity_id: light.entryway_light
        data:
          parameter: LED Indicator Color for Dimmer
          value: "{{ color }}"
      - action: zwave_js.set_config_parameter
        target:
          entity_id: light.entryway_light
        data:
          parameter: LED Indicator Color for Relay
          value: "{{ color }}"

      # Kitchen Sink
      - action: zwave_js.set_config_parameter
        target:
          entity_id: light.kitchen_sink_light
        data:
          parameter: LED Indicator Color for Dimmer
          value: "{{ color }}"
      - action: zwave_js.set_config_parameter
        target:
          entity_id: light.kitchen_sink_light
        data:
          parameter: LED Indicator Color for Relay
          value: "{{ color }}"

      # Entryway
      - action: zwave_js.set_config_parameter
        target:
          entity_id: light.master_bedroom_ceiling_fan
        data:
          parameter: LED Indicator Color for Dimmer
          value: "{{ color }}"
      - action: zwave_js.set_config_parameter
        target:
          entity_id: light.master_bedroom_ceiling_fan
        data:
          parameter: LED Indicator Color for Relay
          value: "{{ color }}"

      # Bethany's Office
      - action: zwave_js.set_config_parameter
        target:
          entity_id: light.bethany_office_ceiling_fan
        data:
          parameter: LED Indicator Color for Dimmer
          value: "{{ color }}"
      - action: zwave_js.set_config_parameter
        target:
          entity_id: light.bethany_office_ceiling_fan
        data:
          parameter: LED Indicator Color for Relay
          value: "{{ color }}"
