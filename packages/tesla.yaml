input_number:
  # Emporia View, Appdaemon app, and Tesla BLE follow this
  tesla_charge_rate_master:
    name: Tesla Charge Rate
    initial: 40
    min: 5
    max: 40
    step: 1
    mode: slider  # or 'box' if you want a number input box instead
    unit_of_measurement: "A"    

mqtt:
  - sensor:
      name: Tesla Display Name
      object_id: tesla_display_name # entity_id
      unique_id: teslamate_1_display_name # internal id, used for device grouping
      availability: &teslamate_availability
        - topic: teslamate/cars/1/healthy
          payload_available: 'true'
          payload_not_available: 'false'
      device: &teslamate_device_info
        identifiers: [teslamate_car_1]
        configuration_url: !secret teslamate-frontend
        manufacturer: Tesla
        model: Model S
        name: Tessie
      state_topic: "teslamate/cars/1/display_name"
      icon: mdi:car

  - device_tracker:
      name: Tesla Location
      object_id: tesla_location
      unique_id: teslamate_1_location
      availability: *teslamate_availability
      device: *teslamate_device_info
      json_attributes_topic: "teslamate/cars/1/location"
      icon: mdi:crosshairs-gps
      
  - device_tracker:
      name: Tesla Active route location
      object_id: tesla_active_route_location
      unique_id: teslamate_1_active_route_location
      availability: &teslamate_active_route_availability
        - topic: "teslamate/cars/1/active_route"
          value_template: "{{ 'offline' if value_json.error else 'online' }}"
      device: *teslamate_device_info
      json_attributes_topic: "teslamate/cars/1/active_route"
      json_attributes_template: "{{ value_json.location | tojson }}"
      icon: mdi:crosshairs-gps

  - sensor:
      name: Tesla State
      object_id: tesla_state
      unique_id: teslamate_1_state
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/state"
      icon: mdi:car-connected

  - sensor:
      name: Tesla Since
      object_id: tesla_since
      unique_id: teslamate_1_since
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/since"
      device_class: timestamp
      icon: mdi:clock-outline

  - sensor:
      name: Tesla Version
      object_id: tesla_version
      unique_id: teslamate_1_version
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/version"
      icon: mdi:alphabetical

  - sensor:
      name: Tesla Update Version
      object_id: tesla_update_version
      unique_id: teslamate_1_update_version
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/update_version"
      icon: mdi:alphabetical

  - sensor:
      name: Tesla Geofence
      object_id: tesla_geofence
      unique_id: teslamate_1_geofence
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/geofence"
      icon: mdi:earth

  - sensor:
      name: Tesla Shift State
      object_id: tesla_shift_state
      unique_id: teslamate_1_shift_state
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/shift_state"
      icon: mdi:car-shift-pattern

  - sensor:
      name: Tesla Power
      object_id: tesla_power
      unique_id: teslamate_1_power
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/power"
      device_class: power
      unit_of_measurement: kW
      icon: mdi:flash

  - sensor:
      name: Tesla Speed
      object_id: tesla_speed
      unique_id: teslamate_1_speed
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/speed"
      unit_of_measurement: "mi/h"
      icon: mdi:speedometer
      value_template: "{{ ((value | float) / 1.609344) | round(2) }}"

#   - sensor:
#       name: Tesla Heading
#       object_id: tesla_heading
#       unique_id: teslamate_1_heading
#       availability: *teslamate_availability
#       device: *teslamate_device_info
#       state_topic: "teslamate/cars/1/heading"
#       unit_of_measurement: °
#       icon: mdi:compass

  - sensor:
      name: Tesla Elevation
      object_id: tesla_elevation
      unique_id: teslamate_1_elevation
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/elevation"
      unit_of_measurement: ft
      icon: mdi:image-filter-hdr
      value_template: "{{ ((value | float) * 3.2808 ) | round(2) }}"

  - sensor:
      name: Tesla Inside Temp
      object_id: tesla_inside_temp
      unique_id: teslamate_1_inside_temp
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/inside_temp"
      device_class: temperature
      unit_of_measurement: °C
      icon: mdi:thermometer-lines

  - sensor:
      name: Tesla Outside Temp
      object_id: tesla_outside_temp
      unique_id: teslamate_1_outside_temp
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/outside_temp"
      device_class: temperature
      unit_of_measurement: °C
      icon: mdi:thermometer-lines

  - sensor:
      name: Tesla Odometer
      object_id: tesla_odometer
      unique_id: teslamate_1_odometer
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/odometer"
      unit_of_measurement: mi
      icon: mdi:counter
      value_template: "{{ ((value | float) / 1.609344) | round(2) }}"

  - sensor:
      name: Tesla Est Battery Range
      object_id: tesla_est_battery_range
      unique_id: teslamate_1_est_battery_range
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/est_battery_range_km"
      unit_of_measurement: mi
      icon: mdi:gauge
      value_template: "{{ ((value | float) / 1.609344) | round(2) }}"

  - sensor:
      name: Tesla Rated Battery Range
      object_id: tesla_rated_battery_range
      unique_id: teslamate_1_rated_battery_range
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/rated_battery_range_km"
      unit_of_measurement: mi
      icon: mdi:gauge
      value_template: "{{ ((value | float) / 1.609344) | round(2) }}"

  - sensor:
      name: Tesla Ideal Battery Range
      object_id: tesla_ideal_battery_range
      unique_id: teslamate_1_ideal_battery_range
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/ideal_battery_range_km"
      unit_of_measurement: mi
      icon: mdi:gauge
      value_template: "{{ ((value | float) / 1.609344) | round(2) }}"

  - sensor:
      name: Tesla Battery Level
      object_id: tesla_battery_level
      unique_id: teslamate_1_battery_level
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/battery_level"
      device_class: battery
      unit_of_measurement: "%"
      icon: mdi:battery-80
      
  - sensor:
      name: Tesla Usable Battery Level
      object_id: tesla_usable_battery_level
      unique_id: teslamate_1_usable_battery_level
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/usable_battery_level"
      unit_of_measurement: "%"
      icon: mdi:battery-80

  - sensor:
      name: Tesla Charge Energy Added
      object_id: tesla_charge_energy_added
      unique_id: teslamate_1_charge_energy_added
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/charge_energy_added"
      device_class: energy
      unit_of_measurement: kWh
      icon: mdi:battery-charging

  - sensor:
      name: Tesla Charge Limit Soc
      object_id: tesla_charge_limit_soc
      unique_id: teslamate_1_charge_limit_soc
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/charge_limit_soc"
      unit_of_measurement: "%"
      icon: mdi:battery-charging-100

  - sensor:
      name: Tesla Charger Actual Current
      object_id: tesla_charger_actual_current
      unique_id: teslamate_1_charger_actual_current
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/charger_actual_current"
      device_class: current
      unit_of_measurement: A
      icon: mdi:lightning-bolt

  # - sensor:
  #     name: Tesla Charger Phases
  #     object_id: tesla_charger_phases
  #     unique_id: teslamate_1_charger_phases
  #     availability: *teslamate_availability
  #     device: *teslamate_device_info
  #     state_topic: "teslamate/cars/1/charger_phases"
  #     icon: mdi:sine-wave

  - sensor:
      name: Tesla Charger Power
      object_id: tesla_charger_power
      unique_id: teslamate_1_charger_power
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/charger_power"
      device_class: power
      unit_of_measurement: kW
      icon: mdi:lightning-bolt

  - sensor:
      name: Tesla Charger Voltage
      object_id: tesla_charger_voltage
      unique_id: teslamate_1_charger_voltage
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/charger_voltage"
      device_class: voltage
      unit_of_measurement: V
      icon: mdi:lightning-bolt

  - sensor:
      name: Tesla Scheduled Charging Start Time
      object_id: tesla_scheduled_charging_start_time
      unique_id: teslamate_1_scheduled_charging_start_time
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/scheduled_charging_start_time"
      device_class: timestamp
      icon: mdi:clock-outline

  - sensor:
      name: Tesla Time To Full Charge
      object_id: tesla_time_to_full_charge
      unique_id: teslamate_1_time_to_full_charge
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/time_to_full_charge"
      unit_of_measurement: h
      icon: mdi:clock-outline

  - sensor:
      name: Tesla TPMS Pressure Front Left
      object_id: tesla_tpms_pressure_fl
      unique_id: teslamate_1_tpms_pressure_fl
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/tpms_pressure_fl"
      unit_of_measurement: psi
      icon: mdi:car-tire-alert
      value_template: "{{ ((value | float) * 14.50377) | round(2)  }}"

  - sensor:
      name: Tesla TPMS Pressure Front Right
      object_id: tesla_tpms_pressure_fr
      unique_id: teslamate_1_tpms_pressure_fr
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/tpms_pressure_fr"
      unit_of_measurement: psi
      icon: mdi:car-tire-alert
      value_template: "{{ ((value | float) * 14.50377) | round(2)  }}"

  - sensor:
      name: Tesla TPMS Pressure Rear Left
      object_id: tesla_tpms_pressure_rl
      unique_id: teslamate_1_tpms_pressure_rl
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/tpms_pressure_rl"
      unit_of_measurement: psi
      icon: mdi:car-tire-alert
      value_template: "{{ ((value | float) * 14.50377) | round(2)  }}"

  - sensor:
      name: Tesla TPMS Pressure Rear Right
      object_id: tesla_tpms_pressure_rr
      unique_id: teslamate_1_tpms_pressure_rr
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/tpms_pressure_rr"
      unit_of_measurement: psi
      icon: mdi:car-tire-alert
      value_template: "{{ ((value | float) * 14.50377) | round(2)  }}"

  - sensor:
      name: Tesla Active route destination
      object_id: tesla_active_route_destination
      unique_id: teslamate_1_active_route_destination
      availability: *teslamate_active_route_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/active_route"
      value_template: "{{ value_json.destination }}"
      icon: mdi:map-marker

  - sensor:
      name: Tesla Active route energy at arrival
      object_id: tesla_active_route_energy_at_arrival
      unique_id: teslamate_1_active_route_energy_at_arrival
      availability: *teslamate_active_route_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/active_route"
      value_template: "{{ value_json.energy_at_arrival }}"
      unit_of_measurement: "%"
      icon: mdi:battery-80

  - sensor:
      name: Tesla Active route distance to arrival (mi)
      object_id: tesla_active_route_distance_to_arrival_mi
      unique_id: teslamate_1_active_route_distance_to_arrival_mi
      availability: *teslamate_active_route_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/active_route"
      value_template: "{{ value_json.miles_to_arrival }}"
      unit_of_measurement: mi
      icon: mdi:map-marker-distance

  - sensor:
      name: Tesla Active route minutes to arrival
      object_id: tesla_active_route_minutes_to_arrival
      unique_id: teslamate_1_active_route_minutes_to_arrival
      availability: *teslamate_active_route_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/active_route"
      value_template: "{{ value_json.minutes_to_arrival }}"
      unit_of_measurement: min
      icon: mdi:clock-outline

  - sensor:
      name: Tesla Active route traffic minutes delay
      object_id: tesla_active_route_traffic_minutes_delay
      unique_id: teslamate_1_active_route_traffic_minutes_delay
      availability: *teslamate_active_route_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/active_route"
      value_template: "{{ value_json.traffic_minutes_delay }}"
      unit_of_measurement: min
      icon: mdi:clock-alert-outline

  - binary_sensor:
      name: Tesla Healthy
      object_id: tesla_healthy
      unique_id: teslamate_1_healthy
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/healthy"
      payload_on: "true"
      payload_off: "false"
      icon: mdi:heart-pulse

  - binary_sensor:
      name: Tesla Update Available
      object_id: tesla_update_available
      unique_id: teslamate_1_update_available
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/update_available"
      payload_on: "true"
      payload_off: "false"
      icon: mdi:alarm

  - binary_sensor:
      name: Tesla Locked
      object_id: tesla_locked
      unique_id: teslamate_1_locked
      availability: *teslamate_availability
      device: *teslamate_device_info
      device_class: lock
      state_topic: "teslamate/cars/1/locked"
      payload_on: "false"
      payload_off: "true"

  - binary_sensor:
      name: Tesla Sentry Mode
      object_id: tesla_sentry_mode
      unique_id: teslamate_1_sentry_mode
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/sentry_mode"
      payload_on: "true"
      payload_off: "false"
      icon: mdi:cctv

  - binary_sensor:
      name: Tesla Windows Open
      object_id: tesla_windows_open
      unique_id: teslamate_1_windows_open
      availability: *teslamate_availability
      device: *teslamate_device_info
      device_class: window
      state_topic: "teslamate/cars/1/windows_open"
      payload_on: "true"
      payload_off: "false"
      icon: mdi:car-door

  - binary_sensor:
      name: Tesla Doors Open
      object_id: tesla_doors_open
      unique_id: teslamate_1_doors_open
      availability: *teslamate_availability
      device: *teslamate_device_info
      device_class: door
      state_topic: "teslamate/cars/1/doors_open"
      payload_on: "true"
      payload_off: "false"
      icon: mdi:car-door

  - binary_sensor:
      name: Tesla Trunk Open
      object_id: tesla_trunk_open
      unique_id: teslamate_1_trunk_open
      availability: *teslamate_availability
      device: *teslamate_device_info
      device_class: opening
      state_topic: "teslamate/cars/1/trunk_open"
      payload_on: "true"
      payload_off: "false"
      icon: mdi:car-side

  - binary_sensor:
      name: Tesla Frunk Open
      object_id: tesla_frunk_open
      unique_id: teslamate_1_frunk_open
      availability: *teslamate_availability
      device: *teslamate_device_info
      device_class: opening
      state_topic: "teslamate/cars/1/frunk_open"
      payload_on: "true"
      payload_off: "false"
      icon: mdi:car-side

  - binary_sensor:
      name: Tesla Is User Present
      object_id: tesla_is_user_present
      unique_id: teslamate_1_is_user_present
      availability: *teslamate_availability
      device: *teslamate_device_info
      device_class: presence
      state_topic: "teslamate/cars/1/is_user_present"
      payload_on: "true"
      payload_off: "false"
      icon: mdi:human-greeting

  - binary_sensor:
      name: Tesla Is Climate On
      object_id: tesla_is_climate_on
      unique_id: teslamate_1_is_climate_on
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/is_climate_on"
      payload_on: "true"
      payload_off: "false"
      icon: mdi:fan

  - binary_sensor:
      name: Tesla Is Preconditioning
      object_id: tesla_is_preconditioning
      unique_id: teslamate_1_is_preconditioning
      availability: *teslamate_availability
      device: *teslamate_device_info
      state_topic: "teslamate/cars/1/is_preconditioning"
      payload_on: "true"
      payload_off: "false"
      icon: mdi:fan

  - binary_sensor:
      name: Tesla Plugged In
      object_id: tesla_plugged_in
      unique_id: teslamate_1_plugged_in
      availability: *teslamate_availability
      device: *teslamate_device_info
      device_class: plug
      state_topic: "teslamate/cars/1/plugged_in"
      payload_on: "true"
      payload_off: "false"
      icon: mdi:ev-station

  - binary_sensor:
      name: Tesla Charge Port Door OPEN
      object_id: tesla_charge_port_door_open
      unique_id: teslamate_1_charge_port_door_open
      availability: *teslamate_availability
      device: *teslamate_device_info
      device_class: opening
      state_topic: "teslamate/cars/1/charge_port_door_open"
      payload_on: "true"
      payload_off: "false"
      icon: mdi:ev-plug-tesla

lock:
  - platform: template
    unique_id: tesla_lock_entity
    name: Tesla
    value_template: "{{ is_state('binary_sensor.tesla_locked', 'off') }}"
    lock:
      action: button.press
      target:
        entity_id: button.tesla_ble_lock_car
    unlock:
      action: button.press
      target:
        entity_id: button.tesla_ble_unlock_car

script:
  tesla_hvac:
    sequence:
      - action: switch.turn_on
        entity_id: switch.tesla_ble_climate
      - if: "{{ states('sensor.tesla_outside_temp') | float < 70 }}"
        then: 
          - delay: '00:00:05'
          - action: number.set_value
            data:
              value: "82"
            target:
              entity_id: number.tesla_ble_climate_temp
          # turn on seat and steering heat
          - action: switch.turn_on
            entity_id: switch.tesla_ble_steering_wheel_heater
          - action: select.select_option
            data:
              option: high
            target:
              entity_id:
                - select.tesla_ble_heated_seat_front_right
                - select.tesla_ble_heated_seat_front_left
        else:
          - delay: '00:00:05'
          - action: number.set_value
            data:
              value: "75"
            target:
              entity_id: number.tesla_ble_climate_temp
          # turn off seat and steering heat
          - action: switch.turn_off
            entity_id: switch.tesla_ble_steering_wheel_heater
          - action: select.select_option
            data:
              option: "off"
            target:
              entity_id:
                - select.tesla_ble_heated_seat_front_right
                - select.tesla_ble_heated_seat_front_left
      - delay: '00:10:00'
      - action: switch.turn_off
        entity_id: switch.tesla_ble_climate
      - delay: '00:00:05'
      - action: switch.turn_off
        entity_id: switch.tesla_ble_steering_wheel_heater
      - action: select.select_option
        data:
          option: "off"
        target:
          entity_id:
            - select.tesla_ble_heated_seat_front_right
            - select.tesla_ble_heated_seat_front_left

# rest_command:
#   tesla_ble_proxy:
#     url: "http://100.74.170.3:8080/api/1/vehicles/VIN/command/{{ command }}"
#     method: post
#   tesla_ble_set_sentry_on:
#     url: http://100.74.170.3:8080/api/1/vehicles/VIN/command/set_sentry_mode
#     method: POST
#     payload: '{"on": true}'
#     content_type: 'application/json'
#   tesla_ble_set_sentry_off:
#     url: http://100.74.170.3:8080/api/1/vehicles/VIN/command/set_sentry_mode
#     method: POST
#     payload: '{"on": false}'
#     content_type: 'application/json'
#   tesla_ble_set_temperature:
#     url: http://100.74.170.3:8080/api/1/vehicles/VIN/command/set_temps
#     method: POST
#     payload: '{"driverTemp": {{ driverTemp }}, "passengerTemp": {{ passengerTemp }}}'
#     content_type: 'application/json'
#
# action: rest_command.tesla_ble_set_temperature
# data:
#   driverTemp: 25
#   passengerTemp: 22

timer:
  tesla_charge_backoff:
    name: Tesla Charge Backoff
    duration: "00:30:00"
    restore: true

automation:
  - alias: Tesla BLE - Hourly Refresh
    description: Press force update and turn on polling every hour
    trigger:
      - platform: time_pattern
        minutes: "0"
    action:
      - service: button.press
        target:
          entity_id: button.tesla_ble_force_update_all
      - service: switch.turn_on
        target:
          entity_id: switch.tesla_ble_state_polling
    mode: single

  # - alias: TeslaUSB Webhook
  #   id: "TeslaUSB Webhook"
  #   trigger:
  #     - platform: webhook
  #       webhook_id: !secret teslausb_webhook
  #       local_only: false
  #   action:
  #     - action: persistent_notification.create
  #       data:
  #         message: "{% if 'data' in trigger %}\n  Data: {{ dict(trigger.data)|tojson }}\n{%
  #           elif 'json' in trigger %}\n  JSON: {{ dict(trigger.json)|tojson }}\n{% else
  #           %} {% endif %} {% if 'query' in trigger and trigger.query|length > 0 %}\n
  #           \ Query: {{ dict(trigger.query)|tojson }}\n{% endif %}"

  - alias: "Tesla Tire Pressure Check on Park"
    trigger:
      - platform: state
        entity_id: sensor.tesla_shift_state
        to: "P"
    # condition:
    #   - condition: state
    #     entity_id: device_tracker.tesla_location
    #     state: "home"
    action:
      - service: python_script.tire_pressure_check

  - alias: "Tesla BLE Disconnected and Reset Sonoff USB"
    trigger:
      - platform: state
        entity_id: binary_sensor.tesla_ble
        to: "off"
        for:
          minutes: 10
    action:
      - service: switch.turn_off
        target:
          entity_id: switch.sonoff_usb_1
      - delay:
          seconds: 5
      - service: switch.turn_on
        target:
          entity_id: switch.sonoff_usb_1

  # This allows TeslaUSB backup to complete (sentry mode on by default at home keeps the Pi powered)
  # turn off after 15 minutes to allow backup to complete
  # - alias: Disable Sentry Mode for TeslaUSB
  #   id: disable_sentry_mode_for_teslausb
  #   trigger:
  #     - platform: state
  #       entity_id: device_tracker.tesla_location
  #       from: "not_home"
  #       to: "home"
  #       id: location
  #     - platform: webhook
  #       webhook_id: !secret teslausb_webhook
  #       local_only: false
  #       id: webhook
  #   action:
  #     - if: "{{ trigger.id == 'webhook' }}"
  #       alias: "Webhook"
  #       then:
  #         - choose:
  #           - conditions:
  #             - condition: template
  #               value_template: '{{ ''including'' in trigger.json.value2 }}'
  #             alias: "Started"
  #             sequence:
  #               - action: switch.turn_on
  #                 target:
  #                   entity_id: switch.tesla_ble_sentry_mode
  #           - conditions:
  #             - condition: template
  #               value_template: '{{ ''completed'' in trigger.json.value2 }}'
  #             alias: "Completed"
  #             sequence:
  #               - action: switch.turn_off
  #                 target:
  #                   entity_id: switch.tesla_ble_sentry_mode
  #     - if: "{{ trigger.id == 'location' }}"
  #       alias: "Location"
  #       then:
  #         - wait_template: "{{ is_state('binary_sensor.tesla_doors_open', 'on') }}"
  #           timeout: 00:05:00
  #         - action: switch.turn_on
  #           entity_id: switch.tesla_ble_sentry_mode
  #         - delay: "00:05:00"
  #         - action: switch.turn_off
  #           entity_id: switch.tesla_ble_sentry_mode
  #   mode: restart

  - alias: "Tesla Charge Limit Change Notice"
    id: "tesla_charge_limit_change_notice"
    initial_state: on
    mode: single
    trigger:
        platform: state
        entity_id: sensor.tesla_charge_limit_soc
    condition: "{{ trigger.to_state.state not in ['unknown', 'unavailable'] and trigger.from_state.state not in ['unknown', 'unavailable'] and not is_state('sensor.tesla_state', 'driving') }}"
    action:
      - action: notify.signal_homeassistant
        data:
          message: "Tesla charge limit set to {{ states('sensor.tesla_charge_limit_soc') }}%"

  - alias: "Tesla Auto Open Garage"
    id: "tesla_auto_open_garage"
    initial_state: on
    mode: single
    trigger:
        platform: state
        entity_id: device_tracker.tesla_location
        from: "not_home"
        to: "home"
    condition: "{{ is_state('binary_sensor.tesla_is_user_present', 'on') }}"
    action:
        - if: "{{ is_state('cover.garage_door', 'closed') }}"
          alias: Open Garage
          then:
            - service: input_boolean.turn_off
              entity_id: input_boolean.security_status
            - service: cover.open_cover
              entity_id: cover.garage_door
            - service: notify.signal_homeassistant
              data:
                message: "Tesla Auto Opened Garage"
            - delay: "00:05:00"
        - if: "{{ is_state('switch.garage_center_leds', 'off') }}"
          alias: Turn On Garage Lights
          then:
            - service: switch.turn_on
              entity_id: switch.garage_center_leds

  - alias: "Auto Lower Charge Rate"
    id: "auto_lower_charge_rate"
    #initial_state: on
    trigger:
        - platform: numeric_state
          id: total
          entity_id: sensor.total_power
          above: 15000
        - platform: numeric_state
          id: total
          entity_id: sensor.total_power
          above: 20000
        - platform: numeric_state
          id: dryer
          entity_id: sensor.dryer_power
          above: 1000
        - platform: numeric_state
          id: dryer
          entity_id: sensor.dryer_power
          above: 3000
        - platform: numeric_state
          id: dryer
          entity_id: sensor.dryer_power
          above: 4000
        - platform: numeric_state
          id: oven
          entity_id: sensor.oven_power
          above: 3500
    action:
        - if: "{{ (states('sensor.total_power') | int) < 15000}}"
          alias: "Less than 15k"
          then:
            # If charging and not already lowered, notify
            - if: "{{ state_attr('switch.emporia_charger','charging_rate') not in [6,20] and is_state('sensor.tesla_state', 'charging') }}"
              then:
                - action: script.notify_wrapper
                  data:
                    message: Charge rate automation triggered by {{ trigger.id }}! Total power {{ states('sensor.total_power') }}W. Limiting charge rate to 20A.
            # If not already lowered, lower
            - if: "{{ state_attr('switch.emporia_charger','charging_rate') not in [6,20] }}"
              then:
                # Limit on charger
                - action: emporia_vue.set_charger_current
                  data:
                    current: 20
                  target:
                    entity_id: switch.emporia_charger
                # Limit on vehicle directly
                - action: number.set_value
                  data:
                    value: "20"
                  target:
                    entity_id: number.tesla_ble_charging_current
            - action: timer.start
              data:
                duration: "00:15:00"
              target:
                entity_id: timer.tesla_charge_backoff

        - if: "{{ 15000 <= (states('sensor.total_power') | int) <= 20000 }}"
          alias: "Between 15k and 20k"
          then:
            # If charging and not already lowered all the way, notify
            - if: "{{ state_attr('switch.emporia_charger','charging_rate') not in [6] and is_state('sensor.tesla_state', 'charging') }}"
              then:
                - action: script.notify_wrapper
                  data:
                    message: Total power has exceeded 15kW! Total power {{ states('sensor.total_power') }}W. Limiting charge rate to 6A.
                    data:
                      priority: 1
            # Limit on charger (min 6)
            - action: emporia_vue.set_charger_current
              data:
                current: 6
              target:
                entity_id: switch.emporia_charger
            # Limit on vehicle directly (min 5)
            - action: number.set_value
              data:
                value: "5"
              target:
                entity_id: number.tesla_ble_charging_current
            - action: timer.start
              data:
                duration: "00:15:00"
              target:
                entity_id: timer.tesla_charge_backoff

        - if: "{{ (states('sensor.total_power') | int) >= 20000 }}"
          alias: "Greater than 20k"
          then:
            # If charging and not already off, notify
            - if: "{{ (is_state('switch.emporia_charger', 'on') or is_state('switch.tesla_ble_882c04_charger_switch', 'on') or is_state('switch.tesla_ble_charger', 'on')) and is_state('sensor.tesla_state', 'charging') }}"
              then:
                - action: script.notify_wrapper
                  data:
                    message: Total power has exceeded 20kW! Total power {{ states('sensor.total_power') }}W. Disabling charger for 15 minutes.
                    data:
                      priority: 1
            # Turn off charger
            - action: switch.turn_off
              entity_id: switch.emporia_charger
            # Tell vehicle to stop charging
            - action: switch.turn_off
              entity_id: switch.tesla_ble_charger
            - action: timer.start
              data:
                duration: "00:15:00"
              target:
                entity_id: timer.tesla_charge_backoff

  - alias: "Auto Raise Charge Rate"
    id: auto_raise_charge_rate
    #initial_state: on
    trigger:
      - platform: event
        id: finish
        event_type: 
          - timer.finished
          - timer.cancelled
        event_data:
          entity_id: timer.tesla_charge_backoff
    action:
        - action: switch.turn_on
          entity_id: switch.emporia_charger
        # Allow vehicle to start charging
        - action: switch.turn_on
          entity_id: switch.tesla_ble_charger
        - if: "{{ state_attr('switch.emporia_charger','charging_rate') != 1  and is_state('sensor.tesla_state', 'charging') }}"
          then:
            - action: script.notify_wrapper
              data:
                message: Timer expired, increasing charge rate to 40A.
        # Limit on charger
        - action: emporia_vue.set_charger_current
          data:
            current: 40
          target:
            entity_id: switch.emporia_charger
        # Limit on vehicle directly
        - action: number.set_value
          data:
            value: "40"
          target:
            entity_id: number.tesla_ble_charging_current

  - id: update_tesla_charging_cost
    alias: Update Tesla Charging Cost
    trigger:
    - platform: time_pattern
      minutes: /5
    condition: "{{ is_state('sensor.tesla_state', 'charging') and is_state('device_tracker.tesla_location', 'home') }}"
    action:
    - alias: Tesla Electricity
      action: python_script.compute_utility_costs
      data:
        meter_entity: sensor.tesla_energy_this_month

  - alias: "AC Adjustment Near Arrival"
    id: tesla_ac_adjustment_for_arrival
    trigger:
      platform: numeric_state
      entity_id: sensor.tesla_active_route_minutes_to_arrival
      below: 31
    condition: "{{ is_state('device_tracker.tesla_active_route_location','home')}}"
    action:
      # - action: notify.signal_homeassistant
      #   data:
      #     message: Adjusting AC prior to arrival based on Tesla location.
      - action: rest_command.adjust_morning