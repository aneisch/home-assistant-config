template:
  - binary_sensor:
      - name: "Flume Flow Status"
        state: >-
          {{ states('sensor.flume_sensor_home_current') != "0" }}

automation:
  - alias: "Flume Connection"
    id: "flume_connection"
    trigger:
      - platform: state
        entity_id: binary_sensor.flume_sensor_home_connectivity
        id: disconnected
        from: "on"
        to: "off"
      - platform: state
        entity_id: binary_sensor.flume_sensor_home_connectivity
        id: connected
        from: "off"
        to: "on"
    action:
      - service: script.notify_wrapper
        data:
          message: "Flume sensor {% if trigger.id == 'disconnected' %}disconnected{% else %}connected{% endif %}"

  - alias: "Water Flow Alert"
    # Alert if water flowing for minutes and we're not home
    # Alert if water flowing for hours regardless
    id: "water_flow_alert"
    mode: parallel
    trigger:
      - platform: state
        entity_id: binary_sensor.flume_flow_status
        id: minutes
        from: "off"
        to: "on"
        for: "00:03:00"
      - platform: state
        entity_id: binary_sensor.flume_flow_status
        id: hours
        from: "off"
        to: "on"
        for: "02:00:00"
    action:
      # any flow when not home and irrigation off AND not during a scheduled timer AND bhyve off
      - if: "{{ trigger.id == 'minutes' 
            and states('sensor.flume_sensor_home_current') | float > 0 
            and is_state('switch.irrigation_master_valve', 'off') 
            and not is_state('switch.bhyve_1','on')
            and not is_state('switch.bhyve_2','on')
            and is_state('group.trackers', 'not_home' ) 
            and not (now().hour == 10 and now().minute in [0,1,2,3,4,5,7,8,9,10,11])
            and not (now().hour == 9 and now().minute in [15,16,17,18,19,20]) 
            and is_state('input_boolean.guest_mode', 'off') }}"
        then:
          - service: script.notify_wrapper
            data:
              message: Unexpected water flow! Instantaneous {{ states('sensor.flume_sensor_home_current') }}g/m ({{ states('sensor.flume_sensor_home_60_minutes')}}g/h)
              data:
                priority: 1
      # high flow when not home and irrigation off AND not during a scheduled timer AND bhyve off
      - if: "{{ trigger.id == 'minutes' 
            and states('sensor.flume_sensor_home_current') | float > 2.5 
            and is_state('switch.irrigation_master_valve', 'off') 
            and not is_state('switch.bhyve_1','on')
            and not is_state('switch.bhyve_2','on')
            and is_state('group.trackers', 'home' ) 
            and not (now().hour == 10 and now().minute in [0,1,2,3,4,5,7,8,9,10,11]) 
            and not (now().hour == 9 and now().minute in [15,16,17,18,19,20]) 
            and is_state('input_boolean.guest_mode', 'off') }}"
        then:
          - service: script.notify_wrapper
            data:
              message: Unexpected water flow! Instantaneous {{ states('sensor.flume_sensor_home_current') }}g/m ({{ states('sensor.flume_sensor_home_60_minutes')}}g/h)
              data:
                priority: 1
      - if: "{{ trigger.id == 'hours' }}"
        then:
          - service: script.notify_wrapper
            data:
              message: Water left running? {{ states('sensor.flume_sensor_home_60_minutes') | round(2) }}g/h (instantaneous {{ states('sensor.flume_sensor_home_current') | round(2) }}g/m )
              data:
                priority: 1

  - alias: "Water Shutoff Alert"
    id: "water_shutoff_alert"
    initial_state: on
    mode: 'single'
    trigger:
      - platform: state
        entity_id: switch.water_shutoff
        to: "on"
    action:
      - service: script.notify_wrapper
        data:
          message: Water supply has been shut off!
          data:
            priority: 1
      - delay: "00:00:15"

  # Also see nodered for faucet auto-drip
  # - alias: "Water Temperature Alert"
  #   id: "water_temperature_alert"
  #   initial_state: on
  #   mode: 'single'
  #   trigger:
  #     - platform: numeric_state
  #       entity_id: sensor.water_supply_temperature
  #       below: 34
  #   action:
  #     - service: script.notify_wrapper
  #       data:
  #         message: "Water supply temperature below 34! Currently {{ trigger.to_state.state }} degrees!"
  #         data:
  #           priority: 1

  - alias: "Water Sensor Alerts"
    id: "water_sensor_alert"
    trigger:
      - platform: state
        id: critical
        entity_id:
          - binary_sensor.guest_bathroom_toilet_water_detector
          - binary_sensor.back_bathroom_toilet_water_detector
          - binary_sensor.kitchen_sink_water_detector
          - binary_sensor.master_bathroom_water_detector
          - binary_sensor.water_shutoff_water_detector
          - binary_sensor.laundry_room_water_detector
          - binary_sensor.kitchen_water_detector
          - binary_sensor.dishwasher_water_detector
        to: "on"
      - platform: state
        id: non_critial
        entity_id:
          - binary_sensor.water_heater_water_detector
        to: "on"
    action:
      - if: "{{ trigger.id == 'critical' }}"
        then:
          - service: switch.turn_on
            entity_id: switch.water_shutoff
      - service: script.notify_wrapper
        data:
          message: "Water detected by {{ trigger.to_state.name }}. {% if trigger.id == 'non_critical' %}Shutting off water!{% endif %}"
          data:
            priority: 2
      # - service: notify.alexa_media
      #   data:
      #     message: "Water detected by {{ trigger.to_state.name }}. {% if trigger.id == 'non_esphome' %}Shutting off water!{% endif %}"
      #     data:
      #       method: all
      #       type: announce
      #     target: ["Office", "Kitchen", "Master", "Living Room"]
