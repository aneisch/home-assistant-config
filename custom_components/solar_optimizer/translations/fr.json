{
    "title": "Solar Optimizer",
    "config": {
        "flow_title": "Solar Optimizer",
        "step": {
            "user": {
                "title": "Type de configuration",
                "description": "Donnez le type de configuration",
                "data": {
                    "device_type": "Type d'équipement"
                },
                "data_description": {
                    "device_type": "Simple équipement de type on/off ou équipement avec gestion de la puissance variable"
                }
            },
            "device_central": {
                "title": "Paramètres communs",
                "description": "Donnez les paramètres communs",
                "data": {
                    "refresh_period_sec": "Période de rafraichissement",
                    "power_consumption_entity_id": "Consommation nette",
                    "power_production_entity_id": "Production solaire",
                    "subscribe_to_events": "Recalculer à chaque changement de la consommation ou de la production",
                    "sell_cost_entity_id": "Prix de vente de l'énergie",
                    "buy_cost_entity_id": "Prix d'achat de l'énergie",
                    "sell_tax_percent_entity_id": "Pourcentage de taxe de revente",
                    "smooth_production": "Lisser la production solaire",
                    "battery_soc_entity_id": "Etat de charge de la batterie",
                    "battery_charge_power_entity_id": "Puissance de charge nette de la batterie",
                    "raz_time": "Heure de remise à zéro"
                },
                "data_description": {
                    "refresh_period_sec": "Période de rafraichissement en secondes. Attention des calculs lourds sont effectués à chaque période. Ne pas rafraichir trop souvent",
                    "power_consumption_entity_id": "l'entity_id du capteur de consommation nette. La consommation nette doit être négative si l'énergie est exportée vers le réseau.",
                    "power_production_entity_id": "l'entity_id du capteur de production d'énergie solaire. Doit être positif ou nul",
                    "subsribe_to_events": "Si coché, le calcul sera effectué à chaque changement de la consommation ou de la production. Attention à la charge CPU dans ce cas",
                    "sell_cost_entity_id": "L'entity_id qui contient le prix actuel de vente de l'énergie.",
                    "buy_cost_entity_id": "L'entity_id qui contient le prix actuel d'achat de l'énergie.",
                    "sell_tax_percent_entity_id": "Le pourcentage de taxe de revente de l'énergie (0 à 100)",
                    "smooth_production": "Si coché, la production solaire sera lissée pour éviter les variations brutales",
                    "battery_soc_entity_id": "Etat de charge de la batterie en %. Si vous n'avez pas de batterie, laissez vide",
                    "battery_charge_power_entity_id": "L'entity_id qui mesure la charger nette de la batterie instantanée. Doit-être exprimé en watts, être positif si la batterie se décharge et négatif si la batterie charge. Laissez vide si vous n'avez pas de batterie solaire.",
                    "raz_time": "Heure de remise à zéro des compteurs de temps passés. Devrait être avant la première exposition au soleil mais pas trop tôt pour laisser du temps à l'activation de nuit"
                }
            },
            "device": {
                "title": "Paramètres de l'équipement",
                "description": "Donnez les paramètres de l'équipement",
                "data": {
                    "name": "Nom",
                    "entity_id": "Entity id",
                    "power_max": "Puissance maximale",
                    "check_usable_template": "Template d'utilisabilité",
                    "check_active_template": "Template d'activation",
                    "duration_min": "Durée mininale d'allumage",
                    "duration_stop_min": "Durée mininale d'extinction",
                    "action_mode": "Mode d'action",
                    "activation_service": "Service d'activation",
                    "deactivation_service": "Service d'extinction",
                    "battery_soc_threshold": "Seuil de charge de la batterie",
                    "max_on_time_per_day_min": "Temps max par jour",
                    "min_on_time_per_day_min": "Temps min par jour",
                    "offpeak_time": "Heure creuse"
                },
                "data_description": {
                    "name": "Nom de l'équipement",
                    "entity_id": "Entity id de l'équipement à piloter",
                    "power_max": "La puissance maximale de l'équipement lorsqu'il est activé",
                    "check_usable_template": "Le template pour vérifier si l'équipement est utilisable. Exemple `True ` ou `states('sensor.my_sensor') | float > 10` (n'oubliez pas les doubles accolades)",
                    "check_active_template": "Le template pour vérifier si un équipement est actif. Laissez le vide pour les simples switch ou apparentés. Exemple `is_state('sensor.my_sensor', 'hvac_mode', 'heat')` (avec les doubles accolades)",
                    "duration_min": "La durée minimale d'allumage de l'équipement en minutes",
                    "duration_stop_min": "La durée minimale d'extinction de l'équipement en minutes",
                    "action_mode": "Le mode d'action. `service` pour appeler un service ou `event` pour envoyer un événement afin de l'allumer ou de l'éteindre",
                    "activation_service": "Le service pour allumer l'équipement. Exemple `switch/turn_on` ou `climate/set_hvac_mode/hvac_mode:cool`",
                    "deactivation_service": "Le service pour éteindre l'équipement. Exemple `switch/turn_off` ou `climate/set_hvac_mode/hvac_mode:off`. Laissez vide pour les équipements qui se désactivent tout seul",
                    "battery_soc_threshold": "Le seuil de charge de la batterie pour activer l'équipement",
                    "max_on_time_per_day_min": "Le temps maximum par jour en état allumé en minutes. Si le temps minimum n'est pas atteint pendant la journée, il sera activé pendant l'heure creuse à concurrence du temps maximum",
                    "min_on_time_per_day_min": "Le temps minimum par jour en état allumé en minutes. Si il n'est pas atteint, l'équipement sera activé pendant l'heure creuse",
                    "offpeak_time": "L'heure de début des heures creuses au format HH:MM"
                }
            },
            "powered_device": {
                "title": "Paramètres de l'équipement avec puissance variable",
                "description": "Donnez les paramètres de l'équipement avec puissance variable",
                "data": {
                    "name": "Nom",
                    "entity_id": "Entity id",
                    "power_max": "Puissance maximale",
                    "power_min": "Puissance minimale",
                    "power_step": "Pas de puissance",
                    "check_usable_template": "Template d'utilisabilité",
                    "check_active_template": "Template d'activation",
                    "duration_min": "Durée mininale d'allumage",
                    "duration_stop_min": "Durée mininale d'extinction",
                    "action_mode": "Mode d'action",
                    "activation_service": "Service d'activation",
                    "deactivation_service": "Service d'extinction",
                    "power_entity_id": "Entity id du capteur de puissance",
                    "duration_power_min": "Durée de changement de puissance",
                    "change_power_service": "Service de changement de puissance",
                    "convert_power_divide_factor": "Facteur de division",
                    "battery_soc_threshold": "Seuil de charge de la batterie",
                    "max_on_time_per_day_min": "Temps max par jour",
                    "min_on_time_per_day_min": "Temps min par jour",
                    "offpeak_time": "Heure creuse"
                },
                "data_description": {
                    "name": "Nom de l'équipement",
                    "entity_id": "Entity id de l'équipement",
                    "power_max": "La puissance maximale de l'équipement lorsqu'il est activé",
                    "power_min": "La puissance minimale de l'équipement lorsqu'il est activé",
                    "power_step": "Le pas de puissance pour l'équipement",
                    "check_usable_template": "Le template pour vérifier si l'équipement est utilisable. Exemple `True ` ou `states('sensor.my_sensor') | float > 10` (n'oubliez pas les doubles accolades)",
                    "check_active_template": "The template to check if the device is active. Keep it empty for switch type device or apparented. Example `is_state('sensor.my_sensor', 'hvac_mode', 'heat')` (with double accolades)",
                    "duration_min": "La durée minimale de l'équipement lorsqu'il est allumé en minutes",
                    "duration_stop_min": "La durée minimale de l'équipement lorsqu'il est éteint en minutes",
                    "action_mode": "Le mode d'action. `service` pour appeler un service ou `event` pour envoyer un événement afin de l'allumer ou de l'éteindre",
                    "activation_service": "Le service pour allumer l'équipement. Exemple `switch/turn_on` ou `climate/set_hvac_mode/hvac_mode:cool`",
                    "deactivation_service": "Le service pour éteindre l'équipement. Exemple `switch/turn_off` ou `climate/set_hvac_mode/hvac_mode:off`",
                    "power_entity_id": "L'entity id du capteur de puissance",
                    "duration_power_min": "La durée minimale de chaque changement de puissance en minutes",
                    "change_power_service": "Le service utilisé pour changer la puissance. Exemple `number/set_value`",
                    "convert_power_divide_factor": "Le facteur de division pour convertir la puissance en unités de l'équipement. Si la conversion de la puissance en ampère, le diviseur doit être 220",
                    "battery_soc_threshold": "Le seuil de charge de la batterie pour   activer l'équipement",
                    "max_on_time_per_day_min": "Le temps maximum par jour en état allumé en minutes. Si le temps minimum n'est pas atteint pendant la journée, il sera activé pendant l'heure creuse à concurrence du temps maximum",
                    "min_on_time_per_day_min": "Le temps minimum par jour en état allumé en minutes. Si il n'est pas atteint, l'équipement sera activé pendant l'heure creuse",
                    "offpeak_time": "L'heure de début des heures creuses au format HH:MM"
                }
            }
        },
        "error": {
            "format_time_invalid": "Le format de l'heure doit être HH:MM"
        }
    },
    "options": {
        "flow_title": "Reconfiguration de Solar Optimizer",
        "step": {
            "user": {
                "title": "Type de configuration",
                "description": "Donnez le type de configuration",
                "data": {
                    "device_type": "Type d'équipement"
                },
                "data_description": {
                    "device_type": "Simple équipement de type on/off ou équipement avec gestion de la puissance variable"
                }
            },
            "device_central": {
                "title": "Paramètres communs",
                "description": "Donnez les paramètres communs",
                "data": {
                    "refresh_period_sec": "Période de rafraichissement",
                    "power_consumption_entity_id": "Consommation nette",
                    "power_production_entity_id": "Production solaire",
                    "subscribe_to_events": "Recalculer à chaque changement de la consommation ou de la production",
                    "sell_cost_entity_id": "Prix de vente de l'énergie",
                    "buy_cost_entity_id": "Prix d'achat de l'énergie",
                    "sell_tax_percent_entity_id": "Pourcentage de taxe de revente",
                    "smooth_production": "Lisser la production solaire",
                    "battery_soc_entity_id": "Etat de charge de la batterie",
                    "battery_charge_power_entity_id": "Puissance de charge nette de la batterie",
                    "raz_time": "Heure de remise à zéro"
                },
                "data_description": {
                    "refresh_period_sec": "Période de rafraichissement en secondes. Attention des calculs lourds sont effectués à chaque période. Ne pas rafraichir trop souvent",
                    "power_consumption_entity_id": "l'entity_id du capteur de consommation nette. La consommation nette doit être négative si l'énergie est exportée vers le réseau.",
                    "power_production_entity_id": "l'entity_id du capteur de production d'énergie solaire. Doit être positif ou nul",
                    "subsribe_to_events": "Si coché, le calcul sera effectué à chaque changement de la consommation ou de la production. Attention à la charge CPU dans ce cas",
                    "sell_cost_entity_id": "L'entity_id qui contient le prix actuel de vente de l'énergie.",
                    "buy_cost_entity_id": "L'entity_id qui contient le prix actuel d'achat de l'énergie.",
                    "sell_tax_percent_entity_id": "Le pourcentage de taxe de revente de l'énergie (0 à 100)",
                    "smooth_production": "Si coché, la production solaire sera lissée pour éviter les variations brutales",
                    "battery_soc_entity_id": "Etat de charge de la batterie en %. Si vous n'avez pas de batterie, laissez vide",
                    "battery_charge_power_entity_id": "L'entity_id qui mesure la charger nette de la batterie instantanée. Doit-être exprimé en watts, être positif si la batterie se décharge et négatif si la batterie charge. Laissez vide si vous n'avez pas de batterie solaire.",
                    "raz_time": "Heure de remise à zéro des compteurs de temps passés. Devrait être avant la première exposition au soleil mais pas trop tôt pour laisser du temps à l'activation de nuit"
                }
            },
            "device": {
                "title": "Paramètres de l'équipement",
                "description": "Donnez les paramètres de l'équipement",
                "data": {
                    "name": "Nom",
                    "entity_id": "Entity id",
                    "power_max": "Puissance maximale",
                    "check_usable_template": "Template d'utilisabilité",
                    "check_active_template": "Template d'activation",
                    "duration_min": "Durée mininale d'allumage",
                    "duration_stop_min": "Durée mininale d'extinction",
                    "action_mode": "Mode d'action",
                    "activation_service": "Service d'activation",
                    "deactivation_service": "Service d'extinction",
                    "battery_soc_threshold": "Seuil de charge de la batterie",
                    "max_on_time_per_day_min": "Temps max par jour",
                    "min_on_time_per_day_min": "Temps min par jour",
                    "offpeak_time": "Heure creuse"
                },
                "data_description": {
                    "name": "Nom de l'équipement",
                    "entity_id": "Entity id de l'équipement à piloter",
                    "power_max": "La puissance maximale de l'équipement lorsqu'il est activé",
                    "check_usable_template": "Le template pour vérifier si l'équipement est utilisable. Exemple `True ` ou `states('sensor.my_sensor') | float > 10` (n'oubliez pas les doubles accolades)",
                    "check_active_template": "Le template pour vérifier si un équipement est actif. Laissez le vide pour les simples switch ou apparentés. Exemple `is_state('sensor.my_sensor', 'hvac_mode', 'heat')` (avec les doubles accolades)",
                    "duration_min": "La durée minimale d'allumage de l'équipement en minutes",
                    "duration_stop_min": "La durée minimale d'extinction de l'équipement en minutes",
                    "action_mode": "Le mode d'action. `service` pour appeler un service ou `event` pour envoyer un événement afin de l'allumer ou de l'éteindre",
                    "activation_service": "Le service pour allumer l'équipement. Exemple `switch/turn_on` ou `climate/set_hvac_mode/hvac_mode:cool`",
                    "deactivation_service": "Le service pour éteindre l'équipement. Exemple `switch/turn_off` ou `climate/set_hvac_mode/hvac_mode:off`. Laissez vide pour les équipements qui se désactivent tout seul",
                    "battery_soc_threshold": "Le seuil de charge de la batterie pour activer l'équipement",
                    "max_on_time_per_day_min": "Le temps maximum par jour en état allumé en minutes. Si le temps minimum n'est pas atteint pendant la journée, il sera activé pendant l'heure creuse à concurrence du temps maximum",
                    "min_on_time_per_day_min": "Le temps minimum par jour en état allumé en minutes. Si il n'est pas atteint, l'équipement sera activé pendant l'heure creuse",
                    "offpeak_time": "L'heure de début des heures creuses au format HH:MM"
                }
            },
            "powered_device": {
                "title": "Paramètres de l'équipement avec puissance variable",
                "description": "Donnez les paramètres de l'équipement avec puissance variable",
                "data": {
                    "name": "Nom",
                    "entity_id": "Entity id",
                    "power_max": "Puissance maximale",
                    "power_min": "Puissance minimale",
                    "power_step": "Pas de puissance",
                    "check_usable_template": "Template d'utilisabilité",
                    "check_active_template": "Template d'activation",
                    "duration_min": "Durée mininale d'allumage",
                    "duration_stop_min": "Durée mininale d'extinction",
                    "action_mode": "Mode d'action",
                    "activation_service": "Service d'activation",
                    "deactivation_service": "Service d'extinction",
                    "power_entity_id": "Entity id du capteur de puissance",
                    "duration_power_min": "Durée de changement de puissance",
                    "change_power_service": "Service de changement de puissance",
                    "convert_power_divide_factor": "Facteur de division",
                    "battery_soc_threshold": "Seuil de charge de la batterie",
                    "max_on_time_per_day_min": "Temps max par jour",
                    "min_on_time_per_day_min": "Temps min par jour",
                    "offpeak_time": "Heure creuse"
                },
                "data_description": {
                    "name": "Nom de l'équipement",
                    "entity_id": "Entity id de l'équipement",
                    "power_max": "La puissance maximale de l'équipement lorsqu'il est activé",
                    "power_min": "La puissance minimale de l'équipement lorsqu'il est activé",
                    "power_step": "Le pas de puissance pour l'équipement",
                    "check_usable_template": "Le template pour vérifier si l'équipement est utilisable. Exemple `True ` ou `states('sensor.my_sensor') | float > 10` (n'oubliez pas les doubles accolades)",
                    "check_active_template": "The template to check if the device is active. Keep it empty for switch type device or apparented. Example `is_state('sensor.my_sensor', 'hvac_mode', 'heat')` (with double accolades)",
                    "duration_min": "La durée minimale de l'équipement lorsqu'il est allumé en minutes",
                    "duration_stop_min": "La durée minimale de l'équipement lorsqu'il est éteint en minutes",
                    "action_mode": "Le mode d'action. `service` pour appeler un service ou `event` pour envoyer un événement afin de l'allumer ou de l'éteindre",
                    "activation_service": "Le service pour allumer l'équipement. Exemple `switch/turn_on` ou `climate/set_hvac_mode/hvac_mode:cool`",
                    "deactivation_service": "Le service pour éteindre l'équipement. Exemple `switch/turn_off` ou `climate/set_hvac_mode/hvac_mode:off`",
                    "power_entity_id": "L'entity id du capteur de puissance",
                    "duration_power_min": "La durée minimale de chaque changement de puissance en minutes",
                    "change_power_service": "Le service utilisé pour changer la puissance. Exemple `number/set_value`",
                    "convert_power_divide_factor": "Le facteur de division pour convertir la puissance en unités de l'équipement. Si la conversion de la puissance en ampère, le diviseur doit être 220",
                    "battery_soc_threshold": "Le seuil de charge de la batterie pour   activer l'équipement",
                    "max_on_time_per_day_min": "Le temps maximum par jour en état allumé en minutes. Si le temps minimum n'est pas atteint pendant la journée, il sera activé pendant l'heure creuse à concurrence du temps maximum",
                    "min_on_time_per_day_min": "Le temps minimum par jour en état allumé en minutes. Si il n'est pas atteint, l'équipement sera activé pendant l'heure creuse",
                    "offpeak_time": "L'heure de début des heures creuses au format HH:MM"
                }
            }
        },
        "error": {
            "format_time_invalid": "Le format de l'heure doit être HH:MM"
        }
    },
    "selector": {
        "device_type": {
            "options": {
                "central_config": "Configuration commune",
                "device_type": "Equipement normal de type on/off",
                "powered_device_type": "Equipement avec puissance variable"
            }
        },
        "action_mode": {
            "options": {
                "action_call": "Appel d'action",
                "event": "Evènement"
            }
        }
    }
}