############
# Presence #
############

# Turn off master and common room things, arm security
home_empty:
  sequence:
    - service: homeassistant.turn_on
      data:
        entity_id: input_boolean.security_status
    - service: homeassistant.turn_off
      data:
        entity_id:
          - group.master_bedroom
          - group.common_areas
          #- switch.master_bedroom_christmas_tree # manually turn off because of goodnight script
          - media_player.kitchen_photo_frame
          - media_player.office_photo_frame
          - media_player.misc_photo_frame
    # If before dark, turn off christmas trees in front
      
    # - if: "{{ now().hour < 16 }}"
    #   then:
    #     - service: switch.turn_off
    #       entity_id:
    #         - switch.office_christmas_tree
    #         - switch.dining_room_christmas_tree

# Turn on lights and disarm security
home_occupied:
  sequence:
    - service: homeassistant.turn_off
      data:
        entity_id: input_boolean.security_status
    - if: "{{ now().hour <= 7 or now().hour >= 18}}"
      then:
        - service: light.turn_on
          data:
            entity_id:
              - light.master_bedroom_lamps
              #- light.living_room_sconces
            # Not so bright if it's late..
            brightness: >
              {% if now().hour <= 7 or now().hour >= 22 %}
              128
              {% else %}
              254
              {% endif %}
        - service: homeassistant.turn_on
          data:
            entity_id:
              - group.under_cabinet_lights
              #- group.christmas # dining, office, master tree follow 'on' via appdaemon
              #- switch.master_bedroom_christmas_tree # manually turn on because of goodnight script
    - service: media_player.turn_on
      entity_id: 
        - media_player.kitchen_photo_frame
        - media_player.office_photo_frame
    # Only turn on guest bathroom frame if guest mode
    - if: "{{ is_state('input_boolean.guest_mode', 'on') }}"
      then:
        - service: media_player.turn_on
          entity_id: 
            - media_player.misc_photo_frame

############
# SECURITY #
############

security_disarm:
  sequence:
    - service: script.noop
    # - service: alarm_control_panel.alarm_disarm
    #   entity_id: alarm_control_panel.alexa_guard_7f9e9
    # - service: script.notify_wrapper
    #   data:
    #     message: Disarmed!

security_arm:
  sequence:
    # - service: alarm_control_panel.alarm_arm_away
    #   entity_id: alarm_control_panel.alexa_guard_7f9e9
    - service: homeassistant.turn_on
      entity_id: automation.frigate_notifications
    - service: timer.cancel
      entity_id: timer.frigate_notification_snooze
    # - service: script.notify_wrapper
    #   data:
    #     message: Armed!

##########
# SCENES #
##########

master_bedroom_wakeup:
  sequence:
    # - if: "{{ now().hour < 11 }}"
    #   then:
    #     - service: script.turn_on
    #       entity_id:
    #         - script.christmas_wakeup
    - service: switch.turn_off
      data:
        entity_id: switch.master_bedroom_ceiling_fan
    - delay: "00:00:02"
    - service: script.appdaemon_ac_morning
    - service: light.turn_on
      target:
        entity_id: light.master_bedroom_lamps
      data:
        transition: "{% if 30 > (as_timestamp(now()) - as_timestamp(states.switch.master_bedroom_ceiling_fan.last_changed) | round(0)) %}45{% else %}2{% endif %}"
        brightness: 255
    - service: homeassistant.turn_off
      entity_id: input_boolean.goodnight
    - service: homeassistant.turn_on
      entity_id: 
        #- group.christmas
        - media_player.kitchen_photo_frame
        - media_player.office_photo_frame

master_bedroom_bedtime:
  sequence:
    # - service: script.turn_on # Calling this way allows the sequence to continue without blocking
    #   entity_id: script.christmas_goodnight
    - service: script.appdaemon_ac_night
    #- service: switch.turn_on
    #  data:
    #    entity_id: switch.master_bedroom_ceiling_fan
    #- service: switch.turn_on
    #  data:
    #    entity_id: switch.master_bedroom_sound_machine
    - service: light.turn_off
      data:
        entity_id: light.master_bedroom_ceiling_fan
        transition: 5
    - service: light.turn_off
      data:
        entity_id: light.master_bedroom_lamps
        transition: 5
    - service: homeassistant.turn_off
      data:
        entity_id: group.off_at_bedtime
    - service: homeassistant.turn_on
      entity_id: input_boolean.goodnight
    # - service: lock.lock
    #   target:
    #     entity_id:
    #       - lock.front_door
    #       - lock.garage_exterior_door
    #       - lock.back_door
    - if: "{{ states('input_boolean.guest_mode') == 'off' }}"
      then:
        - service: light.turn_off
          entity_id:
            - light.guest_bedroom_nightstand_lamp
            - light.back_bedroom_nightstand_lamp

#########
# OTHER #
#########

# Change notification platform if internet offline,
notify_wrapper:
  mode: parallel
  sequence:
    - if: '{{ states("binary_sensor.internet_reachability") == "on" }}'
      then:
        # If internet on and priority set: send via pushover
        - if: '{{ "priority" in data }}'
          then:
            - service: notify.pushover
              continue_on_error: true
              data:
                message: "{{ message }}"
                data:
                  priority: "{{ data.priority }}"
                  expire: 600
                  retry: 30
            - service: notify.signal_homeassistant
              data:
                message: "{{ message }}"
          # If internet on and no priority set: send via signal
          else:
            - service: notify.signal_homeassistant
              continue_on_error: true
              data:
                message: "{{ message }}"

        # Mirror to WearOS
        - service: notify.mobile_app_galaxy_watch6_kqbw
          data:
            message: "{{ message }}"
            data:
              ttl: 0
              priority: high

      else:
        # If no internet: send via cellular
        - if: '{{ "priority" in data }}'
          then:
            - service: notify.cellular_message
              data:
                message: "{{ message }}"
                data:
                  priority: "{{ data.priority }}" # passing priority to the notify_wrapper script is optional default 0
                  # https://pushover.net/api#priority
          else:
            - service: notify.cellular_message
              data:
                message: "{{ message }}"

copy:
  sequence:
    - service: shell_command.copy

appdaemon_ac_night:
  sequence:
    # Also constrained by boolean in appdaemon
    - condition: state
      entity_id: input_boolean.ac_automation
      state: "on"
    - service: rest_command.adjust_night

appdaemon_ac_morning:
  sequence:
    # Also constrained by boolean in appdaemon
    - condition: state
      entity_id: input_boolean.ac_automation
      state: "on"
    - service: rest_command.adjust_morning

too_cold:
  sequence:
    - service: climate.set_temperature
      data:
        entity_id: climate.thermostat
        temperature: "{{ float(states('sensor.thermostat_temperature')) + 2 }}"

too_hot:
  sequence:
    - service: climate.set_temperature
      data:
        entity_id: climate.thermostat
        temperature: "{{ float(states('sensor.thermostat_temperature')) - 1 }}"

turn_ac_off:
  sequence:
    - service: climate.turn_off
      data:
        entity_id: climate.thermostat

# Triggered by appdaemon app
# See associated automation
panic:
  sequence:
    - service: notify.pushover
      data:
        message: "Help!"
        title: "Panic!!"
        data:
          priority: 2
          expire: 3600
          retry: 30
          callback: !secret panic_script_webhook_full

spotify_occusim_start:
  sequence:
    - service: media_player.select_source
      data:
        entity_id: media_player.spotify
        source: "Everywhere"
    - service: media_player.volume_set
      data:
        entity_id: media_player.spotify
        volume_level: 0.6
    - service: media_player.media_play
      data:
        entity_id: media_player.spotify

spotify_occusim_stop:
  sequence:
    - service: media_player.media_pause
      data:
        entity_id: media_player.spotify

andrew_phone_update_location:
  sequence:
    - service: notify.mobile_app_andrew_phone
      data:
        message: "request_location_update"

# Do nothing but act as a placeholder in "else" calls when using scripts in automation
noop:
  sequence:
    - delay: "00:00:00"

desk_led_red:
  sequence:
    - service: homeassistant.turn_on
      entity_id: light.desk_led
      data:
        rgb_color: [255, 0, 0]
        brightness: 255
        effect: "custom scan"

desk_led_white:
  sequence:
    - service: homeassistant.turn_on
      entity_id: light.desk_led
      data:
        rgb_color: [255, 255, 255]
        brightness: 255
        effect: "custom scan"

# Launch app on Android phone
andrew_phone_launch_watch_manager:
  sequence: 
    - service: notify.mobile_app_andrew_phone
      data:
        message: "command_launch_app"
        data:
          package_name: "com.samsung.android.app.watchmanager"
          ttl: 0
          priority: high