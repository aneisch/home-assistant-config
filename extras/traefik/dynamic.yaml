http:
  middlewares:
    secureHeaders:
      headers:
        sslRedirect: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 31536000
    sablier:
      plugin:
        sablier:
          dynamic:
            displayName: Your Service
            refreshFrequency: 2s
            showDetails: "false"
            theme: ghost
          group: default
          sablierUrl: http://sablier:10000
          sessionDuration: 30m

  serversTransports:
    skipVerify:
      insecureSkipVerify: true

  routers:
    pfsense:
      entryPoints:
      - websecure
      service: pfsense
      rule: host(`pfsense.domain.com`)
      tls: true
    pfsense-terraform:
      entryPoints:
      - websecure
      service: pfsense
      rule: host(`pfsense-terraform.domain.com`)
      tls: true
    plane:
      entryPoints:
      - websecure
      service: plane
      rule: host(`plane.domain.com`)
      tls: true
    solarassistant:
      entryPoints:
      - websecure
      service: solarassistant
      rule: host(`solarassistant.home.domain.com`)
      tls: true

    # 
    ## Sablier-enabled routers below 
    #
    librespeed:
      middlewares:
        - sablier@file
      service: "librespeed"
      rule: host(`librespeed.domain.com`)
      entryPoints:
        - websecure
      tls: true

    librespeed_local:
      middlewares:
        - sablier@file
      service: "librespeed"
      entrypoints:
        - websecure
      rule: host(`librespeed.home.domain.com`)
      tls: 
        certresolver: le-home
        domains:
          - main: "*.home.domain.com"

    teslamate-frontend-local:
      entrypoints:
        - websecure
      service: "teslamate-frontend"
      rule: host(`teslamate-frontend.home.domain.com`)
      tls: 
        certresolver: le-home
        domains:
          - main: "*.home.domain.com"

    recipes:
      middlewares:
        - sablier@file
      service: "recipes"
      rule: host(`recipes.domain.com`)
      entryPoints:
      - websecure
      tls: true
    recipes_local:
      middlewares:
        - sablier@file
      entrypoints:
        - websecure
      service: "recipes"
      rule: host(`recipes.home.domain.com`)
      tls: 
        certresolver: le-home
        domains:
          - main: "*.home.domain.com"

    portainer:
      middlewares:
        - sablier@file
      service: "portainer"
      rule: host(`portainer.domain.com`)
      entryPoints:
      - websecure
      tls: true
    portainer_local:
      middlewares:
        - sablier@file
      service: "portainer"
      entrypoints:
        - websecure
      rule: host(`portainer.home.domain.com`)
      tls: 
        certresolver: le-home
        domains:
          - main: "*.home.domain.com"

    #vscode:
    #  middlewares:
    #    - sablier@file
    #  service: "vscode"
    #  rule: host(`vscode.domain.com`)
    #  entryPoints:
    #  - websecure
    #  tls: true
    #vscode_local:
    #  middlewares:
    #    - sablier@file
    #  service: "vscode"
    #  rule: host(`vscode.home.domain.com`)
    #  tls: 
    #    certresolver: le-home
    #    domains:
    #      - main: "*.home.domain.com"

  services:
    solarassistant:
      loadBalancer:
        servers:
          - url: http://10.0.1.108
        passHostHeader: true
    plane:
      loadBalancer:
        servers:
          - url: http://10.0.1.8
        passHostHeader: true
    teslamate-frontend:
      loadBalancer:
        servers:
          - url: http://teslamate:4000
        passHostHeader: true
    pfsense:
      loadBalancer:
        servers:
          - url: https://10.0.1.1
        passHostHeader: true
        serversTransport: skipVerify
    librespeed:
      loadBalancer:
        servers:
          - url: http://librespeed:80
    recipes:
      loadBalancer:
        servers:
          - url: http://mealie:9000
    portainer:
      loadBalancer:
        servers:
          - url: http://portainer:9000
    #vscode:
    #  loadBalancer:
    #    servers:
    #      - url: http://vscode:1337

tls:
  options:
    default:
      cipherSuites:
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
      minVersion: VersionTLS12
  stores:
    default:
      defaultCertificate:
        # Cloudflare Origin Cert
        certFile: /opt/certs/cert.crt
        keyFile: /opt/certs/cert.key
