version: '3.2'
services:
    homeassistant:
        container_name: homeassistant
        image: ghcr.io/home-assistant/home-assistant:stable
        labels:
            - com.centurylinklabs.watchtower.monitor-only=true
            # HTTPS for CF
            - traefik.enable=true
            - traefik.http.routers.assist.entrypoints=websecure
            - traefik.http.routers.assist.tls=true
            - traefik.http.routers.assist.rule=Host(`assist.domain.com`)
            - traefik.http.services.assist.loadbalancer.server.port=8123
            - traefik.http.routers.assist.service=assist
            # HTTPS Local Only (with 80-->443 redirect)
            - traefik.http.routers.assist_local.tls=true
            - traefik.http.routers.assist_local.entrypoints=websecure
            - traefik.http.routers.assist_local.tls.certResolver=le-home
            - traefik.http.routers.assist_local.tls.domains[0].main=*.home.domain.com
            - traefik.http.routers.assist_local.rule=Host(`assist.home.domain.com`)
            - traefik.http.routers.assist_local.service=assist
        volumes:
            - /opt/homeassistant:/config
            #- /var/run/docker.sock:/var/run/docker.sock
            - /home/aneisch/symlinks_for_rsync/hass-docker-ssh:/root/.ssh:ro
            - /tmp/radar.gif:/tmp/radar.gif
            - /sys/class/hwmon/hwmon1/temp1_input:/sys/class/thermal/thermal_zone0/temp:ro
            - /etc/localtime:/etc/localtime:ro
            - /frigate-drive:/frigate
            - /opt/frigate:/etc/frigate:ro
            - /frigate:/frigate_disk:ro
            - /run/dbus:/run/dbus:ro
        devices:
            - /dev/zigbee
            - /dev/usb_modem_sim7080g:/dev/cellular_modem
        environment:
            - TZ=America/Chicago
        network_mode: host
        restart: always
        logging:
            driver: none

    mariadb:
        container_name: mariadb
        image: 'mariadb:latest'
        user: '99'
        ports:
            - '127.0.0.1:3306:3306' # Expose localhost only for Home Assistant
        volumes:
            - /opt/mariadb:/var/lib/mysql
        environment:
            - MYSQL_ROOT_PASSWORD=PASSWORD
            - MYSQL_USER=homeassistant
            - MYSQL_PASSWORD=homeassistant
            - MYSQL_DATABASE=homeassistant
            - TZ=America/Chicago
        restart: always

    mosquitto:
        container_name: mosquitto
        image: eclipse-mosquitto:latest
        user: '99'
        environment:
            - TZ=America/Chicago
        healthcheck:
            test: "mosquitto_sub -E -t '#'"
            interval: 60s
            timeout: 10s
            retries: 5
        volumes:
            - '/opt/mosquitto/config:/mosquitto/config:ro'
            - '/opt/mosquitto/log:/mosquitto/log'
            - '/opt/mosquitto/data:/mosquitto/data'
        ports:
            - '1883:1883'
            - '8883:8883'
        restart: always

    influxdb:
        container_name: influxdb
        #image: influxdb
        image: influxdb:1.8.4-alpine
        user: '99'
        volumes:
            - '/opt/influxdb:/var/lib/influxdb'
            - '/opt/influxdb/conf:/etc/influxdb'
        ports:
            - '127.0.0.1:8086:8086' # Expose localhost only for Home Assistant
        restart: always
        environment:
            - TZ=America/Chicago

    nodered:
        container_name: nodered
        image: nodered/node-red:latest
        user: '99'
        volumes:
            - /opt/nodered:/data
            - /etc/localtime:/etc/localtime:ro
        environment:
            - TZ=America/Chicago
        ports:
            - '25:25'
        restart: always
        labels:
            # HTTPS for CF
            - traefik.enable=true
            - traefik.http.routers.nodered.entrypoints=websecure
            - traefik.http.routers.nodered.tls=true
            - traefik.http.routers.nodered.rule=Host(`nodered.domain.com`)
            - traefik.http.services.nodered.loadbalancer.server.port=1880
            - traefik.http.routers.nodered.service=nodered
            # HTTPS Local Only (with 80-->443 redirect)
            - traefik.http.routers.nodered_local.tls=true
            - traefik.http.routers.nodered_local.entrypoints=websecure
            - traefik.http.routers.nodered_local.tls.certResolver=le-home
            - traefik.http.routers.nodered_local.tls.domains[0].main=*.home.domain.com
            - traefik.http.routers.nodered_local.rule=Host(`nodered.home.domain.com`)
            - traefik.http.routers.nodered_local.service=nodered

    appdaemon:
        container_name: appdaemon
        #image: acockburn/appdaemon:latest
        image: ghcr.io/aneisch/appdaemon:dev # Custom based on commit 1b1f6ed (bug was introduced later causing constraints to be ignored) https://github.com/AppDaemon/appdaemon/actions/workflows/build-deploy.yml?page=
        healthcheck:
            test: "curl -sf http://localhost:8888"
            interval: 60s
            timeout: 10s
            retries: 5
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /opt/appdaemon:/conf
            # Mount directory of appdaemon apps installed by HACS
            - /opt/homeassistant/appdaemon/apps:/conf/apps/hacs
        environment:
            - TZ=America/Chicago
        ports:
            - '127.0.0.1:8888:8888' # Expose localhost only for Home Assistant rest_command
        restart: always
        labels:
            # HTTPS for CF
            - traefik.enable=true
            - traefik.http.routers.appdaemon.entrypoints=websecure
            - traefik.http.routers.appdaemon.tls=true
            - traefik.http.routers.appdaemon.rule=Host(`appdaemon.domain.com`)
            - traefik.http.services.appdaemon.loadbalancer.server.port=8888
            - traefik.http.routers.appdaemon.service=appdaemon
            # HTTPS Local Only (with 80-->443 redirect)
            - traefik.http.routers.appdaemon_local.tls=true
            - traefik.http.routers.appdaemon_local.entrypoints=websecure
            - traefik.http.routers.appdaemon_local.tls.certResolver=le-home
            - traefik.http.routers.appdaemon_local.tls.domains[0].main=*.home.domain.com
            - traefik.http.routers.appdaemon_local.rule=Host(`appdaemon.home.domain.com`)
            - traefik.http.routers.appdaemon_local.service=appdaemon

    thermostat_api_server:
        container_name: thermostat_api_server
        restart: always
        image: ghcr.io/aneisch/thermostat_api_server:latest
        volumes:
            - /etc/localtime:/etc/localtime:ro
        # ports:
        #     - '8080:8080'
        environment:
            - THERMOSTAT_SERIAL=THERMOSTAT_SERIAL
            - MQTT_SERVER=10.0.1.22
            - TZ=America/Chicago
            - LOG_LEVEL=INFO
        depends_on:
            - mosquitto
        labels:
            # HTTP Local Only
            - traefik.enable=true
            - traefik.http.routers.thermostat_api.entrypoints=web
            - traefik.http.services.thermostat_api.loadbalancer.server.port=8080
            - traefik.http.routers.thermostat_api.rule=Host(`thermostat-api.home.domain.com`)
            - traefik.http.routers.thermostat_api.service=thermostat_api

    zwavejs:
        container_name: zwavejs
        image: zwavejs/zwavejs2mqtt:latest
        #image: zwavejs/zwavejs2mqtt:sha-0a723f9 # 2.4.1
        restart: always
        stop_signal: SIGINT
        devices:
            - '/dev/zwave:/dev/zwave'
        volumes:
            - /opt/zwavejs:/usr/src/app/store
        ports:
            #- '8091:8091' # port for web interface
            - '127.0.0.1:3000:3000' # port for zwave-js websocket server expose localhost only for Home Assistant
        environment:
            - TZ=America/Chicago
        labels:
            # HTTPS for CF
            - traefik.enable=true
            - traefik.http.routers.zwavejs.entrypoints=websecure
            - traefik.http.routers.zwavejs.tls=true
            - traefik.http.routers.zwavejs.rule=Host(`zwavejs.domain.com`)
            - traefik.http.services.zwavejs.loadbalancer.server.port=8091
            - traefik.http.routers.zwavejs.service=zwavejs
            # HTTPS Local Only (with 80-->443 redirect)
            - traefik.http.routers.zwavejs_local.tls=true
            - traefik.http.routers.zwavejs_local.entrypoints=websecure
            - traefik.http.routers.zwavejs_local.tls.certResolver=le-home
            - traefik.http.routers.zwavejs_local.tls.domains[0].main=*.home.domain.com
            - traefik.http.routers.zwavejs_local.rule=Host(`zwavejs.home.domain.com`)
            - traefik.http.routers.zwavejs_local.service=zwavejs

    cellular_message_relay_sim7080g:
        container_name: cellular_message_relay_sim7080g
        restart: always
        image: ghcr.io/aneisch/cellular_message_relay:sim7080g
        #image: cellular_message_relay:sim7080g
        ports:
            - '127.0.0.1:9998:9999' # Expose localhost only for Home Assistant
        environment:
            - SIM_KEY=SIM_KEY
            - HOST=HOSTIP
            - PORT=11111
            - POWER_TOGGLE_WEBHOOK=http://10.0.1.22:8123/api/webhook/xxx
            - TZ=America/Chicago
            - LOG_LEVEL=DEBUG
        volumes:
            - /etc/localtime:/etc/localtime:ro
        devices:
            - /dev/usb_modem_sim7080g:/dev/cellular_modem

    faster-whisper:
        image: lscr.io/linuxserver/faster-whisper:latest
        container_name: faster-whisper
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=America/Chicago
            - WHISPER_MODEL=tiny.en
            - WHISPER_BEAM=1 #optional
            - WHISPER_LANG=en #optional
        ports:
            - 127.0.0.1:10300:10300
        restart: always

    piper:
        image: lscr.io/linuxserver/piper:latest
        container_name: piper
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=America/Chicago
            - PIPER_VOICE=en_US-hfc_female-medium
        ports:
            - 127.0.0.1:10200:10200
        restart: always

    # openwakeword:
    #     image: rhasspy/wyoming-openwakeword
    #     container_name: openwakeword
    #     environment:
    #         - PUID=1000
    #         - PGID=1000
    #         - TZ=America/Chicago
    #         - "PYTHONUNBUFFERED=1"
    #     ports:
    #         - 127.0.0.1:10400:10400
    #     command: >-
    #         --preload-model 'yo_homie'
    #         --custom-model-dir /custom
    #         --debug
    #         --threshold 0.5
    #         --trigger-level 2
    #         --debug-probability
    #     volumes:
    #         - /opt/openwakeword/:/custom
    #     restart: always
