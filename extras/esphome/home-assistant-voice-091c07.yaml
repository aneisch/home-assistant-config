substitutions:
  name: home-assistant-voice-091c07
  friendly_name: Home Assistant Voice

packages:
  Nabu Casa.Home Assistant Voice PE: github://esphome/home-assistant-voice-pe/home-assistant-voice.yaml

esphome:
  name: ${name}
  name_add_mac_suffix: false
  friendly_name: ${friendly_name}
  on_boot:
      priority: 375
      then:
        - sensor.template.publish:
            id: next_timer
            state: -1

api:
  encryption:
    key: GhEGCL9xmt3TYsF7WUHuyUf/SrSU0A5IiQr802C1H2g=


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

sensor:
  - platform: template
    id: next_timer
    name: "Next timer"
    update_interval: never
    device_class: duration
    unit_of_measurement: s
    icon: "mdi:clock"

text_sensor:
  - platform: template
    id: timer_name
    name: "Next Timer Name"
    icon: "mdi:clock"

voice_assistant:
  on_timer_started:
    - script.execute: control_leds
    - lambda: | 
          int seconds_left = id(first_active_timer).seconds_left;
          id(next_timer).publish_state(seconds_left);
          id(timer_name).publish_state(id(first_active_timer).name);
  on_timer_cancelled:
    - script.execute: control_leds
    - lambda: | 
          int seconds_left = 0;
          id(next_timer).publish_state(seconds_left); 
          id(timer_name).publish_state(id(first_active_timer).name);
  on_timer_updated:
    - script.execute: control_leds
    - lambda: | 
          int seconds_left = id(first_active_timer).seconds_left;
          id(next_timer).publish_state(seconds_left);  
          id(timer_name).publish_state(id(first_active_timer).name);
  on_timer_tick:
    - script.execute: control_leds
    #only update the timer in HA in increments of 5 seconds so we don't spam the ESPH API
    - lambda: | 
          int seconds_left = id(first_active_timer).seconds_left;
          int lastDigit = std::abs(seconds_left) % 10; 
          if (lastDigit == 0) {
           id(next_timer).publish_state(seconds_left); 
            } else if (lastDigit == 5) {
              id(next_timer).publish_state(seconds_left); 
            }