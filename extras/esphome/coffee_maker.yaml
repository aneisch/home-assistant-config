substitutions:
  name: "coffee_maker"
  friendly_name: "Coffee Maker"

globals:
  - id: last_message
    type: std::vector<uint8_t>
  - id: same_message_count
    type: uint8_t
  - id: service_interval_counter
    type: int
    restore_value: true
    initial_value: '20'
  - id: brew_count
    type: int
    restore_value: true
    initial_value: '20' 

esphome:
  name: ${name}
  
esp8266:
  board: d1_mini

<<: !include common.yaml

external_components:
  - source: github://TillFleisch/ESPHome-Philips-Smart-Coffee@main

uart:
  # UART connected to the mainboard
  - tx_pin: GPIO1
    rx_pin: GPIO3
    baud_rate: 115200
    id: uart_mainboard

  # UART connected to the display
  - tx_pin: GPIO15
    rx_pin: GPIO13
    baud_rate: 115200
    id: uart_display

philips_coffee_machine:
  display_uart: uart_display
  mainboard_uart: uart_mainboard
  power_pin: GPIO12
  id: philip
  model: EP_3246

text_sensor:
  - platform: philips_coffee_machine
    controller_id: philip
    id: status
    name: "${friendly_name} Status"
    on_value:
      then:
        - lambda: |-
            if (id(status).state.find("Brewing 2x") != std::string::npos) {
              id(brew_count) += 2;
              id(service_interval_counter) += 2;
            } else if (id(status).state.find("Brewing") != std::string::npos) {
              id(brew_count) += 1;
              id(service_interval_counter) += 1;
            }      

switch:
  - platform: philips_coffee_machine
    controller_id: philip
    id: coffee_power_with_cleaning
    name: "${friendly_name} Power With Cleaning"
    icon: mdi:coffee-maker

  - platform: philips_coffee_machine
    controller_id: philip
    clean: false
    id: coffee_power_without_cleaning
    name: "${friendly_name} Power Without Cleaning"
    icon: mdi:coffee-maker    

button:
  - platform: philips_coffee_machine
    controller_id: philip
    action: SELECT_COFFEE
    name: "${friendly_name} Select Coffee"
    icon: mdi:coffee

  - platform: philips_coffee_machine
    controller_id: philip
    action: MAKE_COFFEE
    name: "${friendly_name} Make Coffee"
    icon: mdi:coffee

  - platform: philips_coffee_machine
    controller_id: philip
    action: SELECT_AMERICANO
    name: "${friendly_name} Select Americano"
    icon: mdi:coffee

  - platform: philips_coffee_machine
    controller_id: philip
    action: MAKE_AMERICANO
    name: "${friendly_name} Make Americano"
    icon: mdi:coffee

  - platform: philips_coffee_machine
    controller_id: philip
    action: SELECT_ESPRESSO
    name: "${friendly_name} Select Espresso"
    icon: mdi:coffee

  - platform: philips_coffee_machine
    controller_id: philip
    action: MAKE_ESPRESSO
    name: "${friendly_name} Make Espresso"
    icon: mdi:coffee

  - platform: philips_coffee_machine
    controller_id: philip
    action: SELECT_CAPPUCCINO
    name: "${friendly_name} Select Cappuccino"
    icon: mdi:coffee

  - platform: philips_coffee_machine
    controller_id: philip
    action: MAKE_CAPPUCCINO
    name: "${friendly_name} Make Cappuccino"
    icon: mdi:coffee

  - platform: philips_coffee_machine
    controller_id: philip
    action: SELECT_HOT_WATER
    name: "${friendly_name} Select Hot Water"
    icon: mdi:coffee

  - platform: philips_coffee_machine
    controller_id: philip
    action: MAKE_HOT_WATER
    name: "${friendly_name} Dispense Hot Water"
    icon: mdi:coffee

  - platform: philips_coffee_machine
    controller_id: philip
    action: SELECT_LATTE
    name: "${friendly_name} Select Latte"
    icon: mdi:coffee

  - platform: philips_coffee_machine
    controller_id: philip
    action: MAKE_LATTE
    name: "${friendly_name} Make Latte"
    icon: mdi:coffee

  - platform: philips_coffee_machine
    controller_id: philip
    action: PLAY_PAUSE
    name: "${friendly_name} Select Play/Pause"
    icon: mdi:play-pause

  - platform: template
    name: "${friendly_name} Reset Service Interval Counter"
    on_press:
      then:
        - lambda: |-
            id(service_interval_counter) = 0;

  - platform: template
    name: "${friendly_name} Reset Brew Count"
    on_press:
      then:
        - lambda: |-
            id(brew_count) = 0;

number:
  - platform: philips_coffee_machine
    type: bean
    name: "${friendly_name} Strength"
    controller_id: philip
    status_sensor_id: status

  - platform: philips_coffee_machine
    type: milk
    name: "${friendly_name} Milk"
    controller_id: philip
    status_sensor_id: status

  - platform: philips_coffee_machine
    type: size
    name: "${friendly_name} Size"
    controller_id: philip
    status_sensor_id: status

sensor:
  - platform: template
    name: "${friendly_name} Service Interval Counter"
    lambda: |-
      return id(service_interval_counter);
    state_class: measurement
    unit_of_measurement: "count"
    accuracy_decimals: 0

  - platform: template
    name: "${friendly_name} Brew Count"
    lambda: |-
      return id(brew_count);
    state_class: measurement
    unit_of_measurement: "count"
    accuracy_decimals: 0   