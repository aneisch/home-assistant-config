esphome:
  name: mom_and_dad_gate
  platform: ESP8266
  board: d1_mini
  # platformio_options:
  #   platform: espressif8266@2.6.3
  #   platform_packages: 
  #     - platformio/toolchain-xtensa
  #     - platformio/framework-arduinoespressif8266

<<: !include midnight_reboot.yaml

web_server:
  port: 80

logger:
  level: DEBUG
  
# http_request:
#   verify_ssl: false

wifi:
  networks:
  - ssid: SSID
    password: WPA_KEY
  - ssid: SSID
    password: WPA_KEY
  - ssid: SSID
    password: WPA_KEY

# ota:
#   - platform: http_request

# i2c:
#   sda: D2
#   scl: D1
#   scan: False

# script:
#   - id: gate_toggle
#     then:
#       if:
#         condition:
#           and:
#             # Make sure we aren't triggering too rapidly
#             - binary_sensor.is_off: automation_safety
#             # Make sure gate is closed or else we won't trigger
#             - binary_sensor.is_off: gate_status
#         then: 
#           - binary_sensor.template.publish:
#               id: automation_safety
#               state: ON
#           - switch.toggle: gate
#           - text_sensor.template.publish:
#               id: gate_movement_cause
#               state: 'magnetometer'
#           - delay: 5s
#           - text_sensor.template.publish:
#               id: gate_movement_cause
#               state: ''
#           - delay: 115s
#           - binary_sensor.template.publish:
#               id: automation_safety
#               state: OFF
  
mqtt:
  broker: MQTT_BROKER
  port: 1883
  # ssl_fingerprints:
  #   - 3f3077cf1c6becb8fa6dbc497ac6d9dc2a51bd42
  username: owntracks
  password: totallyowned
  log_topic: 
    topic: ${mqtt_prefix}/logs
    level: NONE

sensor:
  # - platform: qmc5883l
  #   address: 0x0D
  #   heading:
  #     id: heading
  #     name: "reading"
  #   #data_rate: 10Hz
  #   range: 200uT
  #   oversampling: 512x
  #   update_interval: 1s

  # Template sensor to keep average of last 15 heading
  # readings so we can detect significant change
  # - platform: template
  #   #name: "heading_average"
  #   id: heading_average
  #   update_interval: 1s
  #   unit_of_measurement: "Â°"
  #   lambda: return id(heading).state;
  #   filters:
  #     - sliding_window_moving_average:
  #         window_size: 15
  #         send_every: 1
  #   on_value:
  #     then:
  #       if:
  #         condition:
  #           and:
  #             - for:
  #                 time: 3s
  #                 condition:
  #                   binary_sensor.is_on: heading_comparison
  #             # This is intentionally duplicated
  #             - binary_sensor.is_off: automation_safety
  #         then:
  #           - delay: 1s
  #           # Disable due to broken sensor
  #           #- script.execute: gate_toggle
  
  # - platform: adc
  #   pin: A0
  #   id: battery_level
  #   name: "Gate Battery Voltage"
  #   update_interval: 600s
  #   accuracy_decimals: 4
  #   filters:
  #     - multiply: 15.43

  - platform: uptime
    id: uptime_sensor
    name: "Mom and Dad Gate Uptime"
    update_interval: 600s

binary_sensor:
  # Sensor to keep script from triggering in rapid succession
  # - platform: template
  #   name: "Gate Automation Safety"
  #   id: automation_safety

  # This is what is used to trigger the automation
  # - platform: template
  #   name: Gate Heading Comparison Trigger
  #   id: heading_comparison
  #   # Set our trigger to true if heading varies from avg more than 2.5deg 
  #   lambda: |-
  #     if (id(heading).state > id(heading_average).state + 2.5) {
  #       return true;
  #     }
  #     if (id(heading).state < id(heading_average).state - 2.5) {
  #       return true;
  #     }
  #     else {
  #       return false;
  #     }

  # Magnet sensor to get real-world state
  # - platform: gpio
  #   pin:
  #     number: 14
  #     mode: INPUT_PULLUP
  #   #name: "Mom and Dad Gate Status"
  #   id: gate_status
  #   device_class: door
  #   filters:
  #     - delayed_on: 1s
  #     - delayed_off: 1s

# button:
#   - platform: template
#     name: "Mom and Dad Gate Firmware update"
#     on_press:
#       then:
#         - ota.http_request.flash:
#             url: !secret mom_and_dad_gate_ota
#         - logger.log: "This message should be not displayed(reboot)"

switch:
  - platform: restart
    id: reboot
    
  # Actual GPIO output
  - platform: gpio
    id: relay
    pin:
      number: D8
      inverted: False
  
  # Switch which toggles the relay on and off
  - platform: template
    id: gate
    icon: "mdi:gate"
    turn_on_action:
    - switch.turn_on: relay
    - delay: 500ms
    - switch.turn_off: relay

cover:
  - platform: template
    name: "Mom and Dad Gate"
    device_class: garage
    open_action:
      - switch.turn_on: gate
    close_action:
      - switch.turn_on: gate
    stop_action:
      - switch.turn_on: gate

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "Mom and Dad Gate IP Address"
  # - platform: template
  #   name: "Gate Movement Cause"
  #   id: gate_movement_cause
