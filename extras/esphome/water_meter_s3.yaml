substitutions:
  name: water_meter_s3
  friendly_name: "Water Meter S3"
  volume_unit: 'gal'
  i2c_scl: GPIO36  # D1
  i2c_sda: GPIO35  # D2
  prefix_name: "S3 "
  flow_update_interval_seconds: "2"
  hide_magnetic_field_strength_sensors: 'false'
  hide_half_rotations_total_sensor: 'false'

esphome:
  name: ${name}
  platformio_options:
    board_build.arduino.memory_type: qio_qspi
    board_upload.ram_size: 327680
    board_upload_maximum_size: 4193404
    board_upload_speed: 460800
    build_flags: [
      "-DBOARD_HAS_PSRAM",
      "-DARDUINO_LOLIN_S3_MINI",
      "-DARDUINO_USB_MODE=1"
      ]

logger:
  #level: DEBUG
  # Disable serial logging
  baud_rate: 0

esp32:
  board: lolin_s3_mini
  variant: esp32s3
  flash_size: 4MB
  framework:
    type: arduino
    version: 2.0.8
    platform_version: 6.3.2

# Common settings to all my devices
wifi:
  ssid: "SSID"
  password: !secret wifi_password

api:
  # #reboot_timeout: 0s # default
  # encryption:
  #   key: !secret encryption_key

ota:
  platform: esphome
  password: esphome_recovery

i2c:
  id: i2c_bus
  sda: ${i2c_sda}
  scl: ${i2c_scl}
  scan: True
  #frequency: 300kHz

packages:
  meter:
    url: https://github.com/tronikos/esphome-magnetometer-water-gas-meter
    ref: main
    file: esphome-water-meter.yaml
    # Or for gas meter:
    # file: esphome-gas-meter.yaml
    # Or if you are using HMC5883L instead of QMC5883L:
    # files: [esphome-water-meter.yaml, hmc5883l.yaml]
    refresh: 0s 

binary_sensor:
  - platform: template
    name: ${prefix_name}Flow Status
    lambda: |-
      if (id(${prefix_id}sensor_flow).state > 0) {
        return true;
      } else {
        return false;
      }

switch:
  - platform: restart
    id: restart_device
    name: "${friendly_name} Restart"

debug:
  update_interval: 5s

sensor:
  - platform: debug
    loop_time:
      name: "Loop Time"

  - id: !extend ${prefix_id}sensor_flow
    accuracy_decimals: 4
